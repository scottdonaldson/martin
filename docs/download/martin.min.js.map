{"version":3,"sources":["martin.min.js"],"names":["Martin","val","options","this","original","document","getElementById","HTMLElement","makeCanvas","Element","type","caller","data","base","layer","currentLayer","canvas","createElement","context","getContext","width","naturalWidth","height","naturalHeight","scale","x","y","normalizeX","normalizeY","effects","stack","elements","push","color","bumpToBottom","drawImage","img","rect","registerEffect","name","cb","attachRender","stackContainer","effect","Effect","renderEffect","call","prototype","autorender","Layer","desaturate","amt","loop","pixel","r","g","b","grayscale","lighten","Math","round","BlurStack","a","next","EventCallback","exec","e","k","eventObj","offsetX","clientX","getBoundingClientRect","left","offsetY","clientY","top","require","utils","types","func","module","exports","registerElement","d","parentNode","insertBefore","removeChild","image","newLayer","tagName","complete","onload","bind","degToRad","deg","PI","radToDeg","rad","hexToRGB","hex","slice","length","parseInt","_private","forEach","arr","noop","_public","extend","obj","method","hasOwnProperty","Error","remove","parent","render","ctx","clearRect","layers","clear","element","renderElement","toDataURL","convertToImage","dataURL","src","i","deleteLayer","container","appendChild","Object","ObjMethods","ObjMethod","put","imageData","pixels","len","n","output","getImageData","floor","putImageData","stackIndex","indexOf","splice","bump","index","bumpUp","bumpDown","bumpToTop","unshift","arg","create","normalizePercentX","normalizePercentY","num","setContext","save","fillStyle","fill","globalAlpha","alpha","lineWidth","strokeWidth","lineCap","cap","strokeStyle","stroke","restore","update","arg1","arg2","key","value","moveTo","endX","endY","points","pt","thisX","thisY","lineTo","centerX","centerY","arc","radius","radiusX","radiusY","toX","toY","fontString","style","size","font","fontOutput","clone","fontSize","fontStyle","measureText","text","defineProperty","get","set","textBaseline","textAlign","align","fillText","increase","decrease","mul_shift_table","mul_table","shg_table","isNaN","iterations","widthMinus1","heightMinus1","radiusPlus1","div","mul_sum","shg_sum","it","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","pr","pg","pb","pa","stackEnd","stackIn","stackStart","events","evt","callback","addEventListener","on","split","ev","which","resize","ratio"],"mappings":"AAaA,QAASA,QAAQC,EAAKC,GAElB,MAAOC,gBAAgBH,SAGvBG,KAAKC,SAAW,KACI,gBAARH,GACRE,KAAKC,SAAWC,SAASC,eAAeL,GAChCA,YAAeM,eACvBJ,KAAKC,SAAWH,GAGpBE,KAAKD,QAAUA,MAGRC,KAAKK,cAb4B,GAAIR,QAAQC,EAAKC,GAmd7D,QAASO,SAAQC,EAAMC,EAAQC,GAE3B,GAAIC,GAAOF,EAAOE,MAAQF,EACtBG,EAAQH,EAAOI,cAAgBJ,CAmCnC,OAhCAR,MAAKU,KAAOA,EACZV,KAAKa,OAASX,SAASY,cAAc,UACrCd,KAAKe,QAAUf,KAAKa,OAAOG,WAAW,MAGtChB,KAAKa,OAAOI,MAAQP,EAAKT,SAAYS,EAAKT,SAASiB,cAAgBR,EAAKT,SAASgB,MAASP,EAAKO,QAC/FjB,KAAKa,OAAOM,OAAST,EAAKT,SAAYS,EAAKT,SAASmB,eAAiBV,EAAKT,SAASkB,OAAUT,EAAKS,SAElGnB,KAAKqB,OACDC,EAAG,EACHC,EAAG,GAGPvB,KAAKS,KAAOA,MACPA,EAAKa,IAAItB,KAAKS,KAAKa,EAAIX,EAAMa,WAAWf,EAAKa,IAC7Cb,EAAKc,IAAIvB,KAAKS,KAAKc,EAAIZ,EAAMc,WAAWhB,EAAKc,IAClDvB,KAAKO,KAAOA,EACZP,KAAKW,MAAQA,EAEbX,KAAK0B,WAEL1B,KAAK2B,MAAQ3B,KAAKW,MAAMiB,SACxB5B,KAAK2B,MAAME,KAAK7B,MAGG,eAAdA,KAAKO,OACNP,KAAKS,MACDqB,MAAOrB,GAEXT,KAAK+B,gBAGF/B,KAsFX,QAASgC,WAAUC,GACfjC,KAAKe,QAAQiB,UAAWC,EAAK,EAAG,GAOpC,QAASC,MAAKzB,GAEV,GAAIE,GAAQX,KAAKW,MACbI,EAAUf,KAAKe,OAEnBA,GAAQmB,KACJvB,EAAMa,WAAYf,EAAKa,GAAK,GAC5BX,EAAMc,WAAYhB,EAAKc,GAAK,GAC5BZ,EAAMa,WAAYf,EAAKQ,OAASN,EAAMM,SACtCN,EAAMc,WAAYhB,EAAKU,QAAUR,EAAMQ,WA4M/C,QAASgB,gBAAeC,EAAMC,GAE1B,QAASC,GAAa7B,EAAMkB,EAAOY,GAG/B,GAAIC,GAAS,GAAI3C,QAAO4C,OAAOL,EAAMpC,KAAMS,EAAMkB,EAAOY,EAQxD,OAJAC,GAAOE,aAAe,WAClBL,EAAGM,KAAKH,EAAQxC,KAAKS,OAGlB+B,EAGX3C,OAAO+C,UAAUR,GAAQ,SAAsB3B,GAC3C,GAAI+B,GAASF,EAAaK,KAAK3C,KAAMS,EAAMT,KAAKY,aAAac,QAAS1B,KAAKY,aAE3E,OADAZ,MAAK6C,aACEL,GAGX3C,OAAOiD,MAAMF,UAAUR,GACvBvC,OAAOS,QAAQsC,UAAUR,GAAQ,SAAgC3B,GAC7D,GAAI+B,GAASF,EAAaK,KAAK3C,KAAKU,KAAMD,EAAMT,KAAK0B,QAAS1B,KAE9D,OADAA,MAAKU,KAAKmC,aACHL,GAuCf,QAASO,YAAWC,GAEhBhD,KAAKe,QAAQkC,KAAK,SAAS3B,EAAGC,EAAG2B,GAE7B,GAAIC,GAAID,EAAMC,EACVC,EAAIF,EAAME,EACVC,EAAIH,EAAMG,EAEVC,EAAgB,GAAJH,EAAc,IAAJC,EAAe,IAAJC,CASrC,OARIF,IAAK,EAAIH,GAAOG,EAAIH,EAAMM,EAC1BF,GAAK,EAAIJ,GAAOI,EAAIJ,EAAMM,EAC1BD,GAAK,EAAIL,GAAOK,EAAIL,EAAMM,EAE9BJ,EAAMC,EAAIA,EACVD,EAAME,EAAIA,EACVF,EAAMG,EAAIA,EAEHH,IAkBf,QAASK,SAAQP,GAEbhD,KAAKe,QAAQkC,KAAK,SAAS3B,EAAGC,EAAG2B,GAM7B,MAJAA,GAAMC,GAAKK,KAAKC,MAAY,IAANT,GACtBE,EAAME,GAAKI,KAAKC,MAAY,IAANT,GACtBE,EAAMG,GAAKG,KAAKC,MAAY,IAANT,GAEfE,IAuCf,QAASQ,aACL1D,KAAKmD,EAAInD,KAAKoD,EAAIpD,KAAKqD,EAAIrD,KAAK2D,EAAI,EACpC3D,KAAK4D,KAAO,KAoMhB,QAASC,eAAcnD,EAAM2B,EAAI9B,GAC7B,OACIuD,KAAM,SAAcC,GAEhB,GAAmBC,GAAfC,IAEJ,KAAMD,IAAKD,GACPE,EAASD,GAAKD,EAAEC,EAGpBC,GAAS3C,EAAIyC,EAAEG,QAAUH,EAAEG,QAAUH,EAAEI,QAAUzD,EAAKG,OAAOuD,wBAAwBC,KACrFJ,EAAS1C,EAAIwC,EAAEO,QAAUP,EAAEO,QAAUP,EAAEQ,QAAU7D,EAAKG,OAAOuD,wBAAwBI,IAErFnC,EAAG4B,GACHvD,EAAKmC,eAnoCjBhD,OAAO+C,UAAUvC,WAAaoE,QAAQ,kBAEtC5E,OAAO6E,QAEP,IAAIA,OAAQD,QAAQ,kBAEpB,KAAM,GAAIE,SAASD,OACf,IAAM,GAAIE,QAAQF,OAAMC,OACN,aAATpE,KACDV,OAAO6E,MAAME,MAAQF,MAAMC,OAAOC,MAElC/E,OAAO+C,UAAUgC,MAAQF,MAAMC,OAAOC,KAKlDC,QAAOC,QAAUjF,MACjB,IAAIkF,iBAAkBN,QAAQ,wBAG9BI,QAAOC,QAAU,WAgBL,QAASE,KAELnE,EAAOI,MAAQhB,EAASiB,aACxBL,EAAOM,OAASlB,EAASmB,cAEzBpB,KAAKiB,MAAMJ,EAAOI,OAClBjB,KAAKmB,OAAON,EAAOM,QAEnBlB,EAASgF,WAAWC,aAAcrE,EAAQZ,GAC1CA,EAASgF,WAAWE,YAAalF,GAGjCJ,OAAOkF,gBAAgB,QAAS,SAAS9C,GACrCD,UAAUW,KAAK3C,KAAMiC,KAGzBjC,KAAKoF,MAAMnF,GAxBvB,GANAD,KAAKa,OAASX,SAASY,cAAc,UACrCd,KAAKe,QAAUf,KAAKa,OAAOG,WAAW,MAGtChB,KAAKqF,WAEArF,KAAKC,SAEN,GAA+B,QAA1BD,KAAKC,SAASqF,QAAoB,CAEnC,GAAIzE,GAASb,KAAKa,OAEdZ,GADUD,KAAKe,QACJf,KAAKC,SAuBpB,IAAKA,EAASsF,SAAW,MAAOP,GAAErC,KAAK3C,KACvCC,GAASuF,OAASR,EAAES,KAAKzF,UAES,WAA1BA,KAAKC,SAASqF,UAEtBtF,KAAKa,OAASb,KAAKC,SACnBD,KAAKe,QAAUf,KAAKC,SAASe,WAAW,MAQhD,OAFAhB,MAAK6C,aAEE7C,MAGX6E,OAAOC,QAAU,QAUjBjF,OAAO6F,SAAW,SAASC,GACvB,MAAOA,IAAQnC,KAAKoC,GAAK,MAG7B/F,OAAOgG,SAAW,SAASC,GACvB,MAAOA,IAAQ,IAAMtC,KAAKoC,KAG9B/F,OAAOkG,SAAW,SAAUC,GAExB,IAAMA,EAAQ,OAAO,CAEI,OAApBA,EAAIC,MAAM,EAAG,KAAeD,EAAMA,EAAIC,MAAM,GAEjD,IAAI9C,GAAGC,EAAGC,CAgBV,OAdoB,KAAf2C,EAAIE,QAEL/C,EAAI6C,EAAIC,MAAM,EAAG,GACjB7C,EAAI4C,EAAIC,MAAM,EAAG,GACjB5C,EAAI2C,EAAIC,MAAM,EAAG,IAEM,IAAfD,EAAIE,SAEZ/C,EAAI6C,EAAIC,MAAM,EAAG,GAAKD,EAAIC,MAAM,EAAG,GACnC7C,EAAI4C,EAAIC,MAAM,EAAG,GAAKD,EAAIC,MAAM,EAAG,GACnC5C,EAAI2C,EAAIC,MAAM,EAAG,GAAKD,EAAIC,MAAM,EAAG,KAKnC9C,EAAGgD,SAAShD,EAAG,IACfC,EAAG+C,SAAS/C,EAAG,IACfC,EAAG8C,SAAS9C,EAAG,MAKvBwB,OAAOC,SAEHsB,UAEIC,QAAS,SAAiBC,EAAKjE,GACvBiE,GACAA,EAAID,QAAQhE,IAIpBkE,KAAM,cAIVC,SAGIC,OAAQ,SAAiBC,GACrB,IAAM,GAAIC,KAAUD,GAAM,CACtB,GAAK7G,OAAO+C,UAAUgE,eAAeD,GACjC,KAAM,IAAIE,OAAM,iIAEhBhH,QAAO+C,UAAU+D,GAAUD,EAAIC,KAK3CG,OAAQ,WACJ,GAAIjG,GAASb,KAAKa,OACdkG,EAASlG,EAAOoE,UAEpB,OADK8B,IAASA,EAAO5B,YAAYnF,KAAKa,QAC/Bb,MAKXgH,OAAQ,SAAgB3E,GAEpB,GAAI4E,GAAMjH,KAAKe,OAmBf,OAjBAkG,GAAIC,UAAU,EAAG,EAAGlH,KAAKiB,QAASjB,KAAKmB,UAEvCtB,OAAO6E,MAAM2B,QAAQrG,KAAKmH,OAAQ,SAASxG,GAEvCA,EAAMyG,QAENvH,OAAO6E,MAAM2B,QAAQ1F,EAAMiB,SAAU,SAAuByF,GACxDA,EAAQC,eAAiBD,EAAQC,kBAGrCzH,OAAO6E,MAAM2B,QAAQ1F,EAAMe,QAAS,SAAsBc,GACtDA,EAAOE,cAAgBF,EAAOE,iBAGlCuE,EAAIjF,UAAUrB,EAAME,OAAQ,EAAG,KAG/BwB,EAAWA,IAERrC,MAIX6C,WAAY,SAAoBR,GAC5B,MAAKrC,MAAKD,QAAQ8C,cAAe,EAAe7C,KAAKgH,OAAO3E,GACrDA,EAAKA,IAAO,MAIvBkF,UAAW,WACP,MAAOvH,MAAKa,OAAO0G,aAKvBC,eAAgB,WAEZ,GAAIC,GAAUzH,KAAKuH,YACftF,EAAM/B,SAASY,cAAc,MAEjCmB,GAAIyF,IAAMD,EAEVzH,KAAKmH,OAAOd,QAAQ,SAAS1F,EAAOgH,GAChC3H,KAAK4H,YAAYD,IAClB3H,MAEEA,KAAK6H,WAAY7H,KAAK6H,UAAUC,YAAa7F,MAO9DpC,OAAOkI,OAAS,YAChB,IAAIC,YACAC,SAEJD,aAEI/E,KAAM,SAASZ,EAAI6F,GAEf,GAGIC,GAAWC,EAAQC,EACnBC,EAAGhH,EAAGC,EACN4B,EAAGC,EAAGC,EAAGM,EACTT,EACAqF,EAPAtH,EAAQjB,KAAKU,KAAKO,OACTjB,MAAKU,KAAKS,QAUvB,IAFAgH,EAAYnI,KAAKwI,eAEA,CAEbJ,EAASD,EAAU1H,KACnB4H,EAAMD,EAAOlC,MAEb,KAAM,GAAIyB,GAAI,EAAOU,EAAJV,EAASA,GAAK,EAG3BW,EAAIX,EAAI,EACRrG,EAAIgH,EAAIrH,EACRM,EAAIiC,KAAKiF,MAAMH,EAAIrH,GAGnBkC,EAAIiF,EAAOT,GACXvE,EAAIgF,EAAOT,EAAI,GACftE,EAAI+E,EAAOT,EAAI,GACfhE,EAAIyE,EAAOT,EAAI,GAGfzE,GAAUC,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,EAAGM,EAAGA,GAG/B4E,EAASlG,EAAGM,KAAM3C,KAAKe,QAASO,EAAGC,EAAG2B,GAGtCkF,EAAOT,GAAKY,EAAOpF,EACnBiF,EAAOT,EAAI,GAAKY,EAAOnF,EACvBgF,EAAOT,EAAI,GAAKY,EAAOlF,EACvB+E,EAAOT,EAAI,GAAKY,EAAO5E,CAKtBuE,MAAQ,GAAQlI,KAAK0I,aAAcP,GAI5C,MAAOnI,OAGXwI,aAAc,WACV,GAAIL,GAAYnI,KAAKe,SAAWf,KAAKa,OAAOI,MAAQ,GAAKjB,KAAKa,OAAOM,OAAS,EAC1EnB,KAAKe,QAAQyH,aAAa,EAAG,EAAGxI,KAAKa,OAAOI,MAAOjB,KAAKa,OAAOM,QAC/D,IACJ,OAAOgH,IAIXO,aAAc,SAASP,GAEnB,MADAnI,MAAKe,QAAQ2H,aAAcP,EAAW,EAAG,GAClCnI,MAGXoH,MAAO,WAEH,MADApH,MAAKe,QAAQmG,UAAU,EAAG,EAAGlH,KAAKU,KAAKO,QAASjB,KAAKU,KAAKS,UACnDnB,MAGX2I,WAAY,WACR,MAAO3I,MAAK2B,MAAMiH,QAAQ5I,OAG9B8G,OAAQ,WAGJ,MAFA9G,MAAK2B,MAAMkH,OAAO7I,KAAK2I,aAAc,GACrC3I,KAAKU,KAAKmC,aACH7C,MAGX8I,KAAM,SAASnB,GACX,GAAIoB,GAAQ/I,KAAK2I,YAIjB,OAHA3I,MAAK8G,SACL9G,KAAK2B,MAAMkH,OAAOE,EAAQpB,EAAG,EAAG3H,MAChCA,KAAKU,KAAKmC,aACH7C,MAGXgJ,OAAQ,WACJ,MAAOhJ,MAAK8I,KAAK,IAGrBG,SAAU,WACN,MAAOjJ,MAAK8I,KAAK,KAGrBI,UAAW,WAIP,MAHAlJ,MAAK8G,SACL9G,KAAK2B,MAAME,KAAK7B,MAChBA,KAAKU,KAAKmC,aACH7C,MAGX+B,aAAc,WAIV,MAHA/B,MAAK8G,SACL9G,KAAK2B,MAAMwH,QAAQnJ,MACnBA,KAAKU,KAAKmC,aACH7C,MAIf,KAAMiI,YAAaD,YACfnI,OAAOkI,OAAOnF,UAAUqF,WAAaD,WAAWC,UA2BpDpI,QAAOiD,MAAQ,SAASpC,EAAM0I,GAwB1B,GAtBApJ,KAAKU,KAAOA,EACZV,KAAKa,OAASX,SAASY,cAAc,UACrCd,KAAKa,OAAOI,MAAQP,EAAKT,SAAYS,EAAKT,SAASiB,cAAgBR,EAAKT,SAASgB,MAASP,EAAKO,QAC/FjB,KAAKa,OAAOM,OAAST,EAAKT,SAAYS,EAAKT,SAASmB,eAAiBV,EAAKT,SAASkB,OAAUT,EAAKS,SAClGnB,KAAKe,QAAUf,KAAKa,OAAOG,WAAW,MACtChB,KAAKqB,OACDC,EAAG,EACHC,EAAG,GAGPvB,KAAK4B,YACL5B,KAAK0B,WAKC1B,KAAKU,KAAKyG,SACZnH,KAAKU,KAAKyG,WAEdnH,KAAK2B,MAAQ3B,KAAKU,KAAKyG,OACvBnH,KAAK2B,MAAME,KAAK7B,MAEI,gBAARoJ,GACRpJ,KAAKO,KAAO6I,MAEZ,KAAM,GAAIzB,KAAKyB,GAAMpJ,KAAK2H,GAAKyB,EAAIzB,EAGvC,OAAO3H,OAIXH,OAAOiD,MAAMF,UAAYmF,OAAOsB,OAAOxJ,OAAOkI,OAAOnF,WAGrD/C,OAAOiD,MAAMF,UAAUpB,WAAa,SAAU1B,GAI1C,MAHoB,gBAARA,IAAsC,MAAlBA,EAAImG,MAAM,MACtCnG,EAAME,KAAKsJ,mBAAoBxJ,EAAImG,MAAM,EAAG,MAEzCnG,EAAME,KAAKqB,MAAMC,GAG5BzB,OAAOiD,MAAMF,UAAUnB,WAAa,SAAU3B,GAI1C,MAHoB,gBAARA,IAAsC,MAAlBA,EAAImG,MAAM,MACtCnG,EAAME,KAAKuJ,mBAAoBzJ,EAAImG,MAAM,EAAG,MAEzCnG,EAAME,KAAKqB,MAAME,GAG5B1B,OAAOiD,MAAMF,UAAU0G,kBAAoB,SAAUxJ,GACjD,MAASA,GAAM,IAAQE,KAAKa,OAAOI,OAGvCpB,OAAOiD,MAAMF,UAAU2G,kBAAoB,SAAUzJ,GACjD,MAASA,GAAM,IAAQE,KAAKa,OAAOM,QAIvCtB,OAAO+C,UAAUyC,SAAW,SAAS+D,GAEjC,GAAI/D,GAAW,GAAIxF,QAAOiD,MAAM9C,KAAMoJ,EAMtC,OAJApJ,MAAKY,aAAeyE,EAEpBrF,KAAK6C,aAEEwC,GAKXxF,OAAO+C,UAAUjC,MAAQ,SAAU6I,GAI/B,MAFAxJ,MAAKY,aAAeZ,KAAKmH,OAAOqC,GAAO,GAEhCxJ,KAAKmH,OAAOqC,GAAO,IAsD9BlJ,QAAQsC,UAAYmF,OAAOsB,OAAOxJ,OAAOkI,OAAOnF,WAGhDtC,QAAQsC,UAAU6G,WAAa,SAAU/C,GAErC,GAAI3F,GAAUf,KAAKe,OAEnBA,GAAQ2I,OAER3I,EAAQ4I,UAAYjD,EAAI5E,OAAS,OACjCf,EAAQ6I,OAER7I,EAAQM,MACJrB,KAAKqB,MAAMC,EACXtB,KAAKqB,MAAME,GAGfR,EAAQ8I,YAAcnD,EAAIoD,OAAS,EAEnC/I,EAAQgJ,UAAYrD,EAAIsD,YAActD,EAAIsD,YAAc,EACxDjJ,EAAQkJ,QAAUvD,EAAIwD,IAAMxD,EAAIwD,IAAM,SACtCnJ,EAAQoJ,YAAczD,EAAI0D,OAAS1D,EAAI0D,OAAS,cAChDrJ,EAAQqJ,SAERrJ,EAAQsJ,WAKZ/J,QAAQsC,UAAU0H,OAAS,SAASC,EAAMC,GAEtC,GAAIC,GAAKC,CAET,IAAKF,EACDC,EAAMF,EACNG,EAAQF,EACRxK,KAAKS,KAAKgK,GAAOC,MAEjB,KAAMD,IAAOF,GACTG,EAAQH,EAAKE,GACbzK,KAAKS,KAAKgK,GAAOC,CAIzB1K,MAAKU,KAAKmC,cAIdvC,QAAQsC,UAAU+H,OAAS,SAASrJ,EAAGC,GAEnC,GAAId,GAAOT,KAAKS,IA4BhB,OAzBAa,GAAIA,GAAK,EACTC,EAAIA,GAAK,EAEU,SAAdvB,KAAKO,MACNE,EAAKmK,MAAQtJ,EAAIb,EAAKa,EACtBb,EAAKoK,MAAQtJ,EAAId,EAAKc,GACA,YAAdvB,KAAKO,OACbE,EAAKqK,OAAOzE,QAAQ,SAAS0E,EAAIpD,GAC7B,GAAKA,EAAI,EAAI,CACT,GAAIqD,GAAQD,EAAG,GACXE,EAAQF,EAAG,EACftK,GAAKqK,OAAOnD,IACRqD,GAAS1J,EAAIb,EAAKqK,OAAO,GAAG,IAC5BG,GAAS1J,EAAId,EAAKqK,OAAO,GAAG,QAIxCrK,EAAKqK,OAAO,IAAMxJ,EAAGC,IAGzBd,EAAKa,EAAIA,EACTb,EAAKc,EAAIA,EAETvB,KAAKU,KAAKmC,aAEH7C,MAIX6E,OAAOC,QAAUxE,QAKjByE,gBAAgB,QAAS,SAAS9C,GAC9BD,UAAUW,KAAK3C,KAAMiC,KAgBzB8C,gBAAgB,OAAQ,SAAStE,GAC7ByB,KAAKS,KAAK3C,KAAMS,KAGpBsE,gBAAgB,aAAc,SAAStE,GACnCyB,KAAKS,KAAK3C,KAAMS,KAGpBsE,gBAAgB,OAAQ,SAAStE,GAE7B,GAAIE,GAAQX,KAAKW,MACbI,EAAUf,KAAKe,OAenB,OAbAA,GAAQ4J,OACJhK,EAAMa,WAAYf,EAAKa,GAAK,GAC5BX,EAAMc,WAAYhB,EAAKc,GAAK,IAGhCR,EAAQmK,OACJvK,EAAMa,WAAYf,EAAKmK,MACvBjK,EAAMc,WAAYhB,EAAKoK,OAGrBpK,EAAKuJ,cAAcvJ,EAAKuJ,YAAc,GAC5CvJ,EAAK2J,OAAS3J,EAAKqB,MAAQrB,EAAKqB,MAAQ,OAEjC9B,OAGX+E,gBAAgB,SAAU,SAAStE,GAE/B,GAAIE,GAAQX,KAAKW,MACbI,EAAUf,KAAKe,QACfoK,EAAUxK,EAAMa,WAAYf,EAAKa,GAAK,GACtC8J,EAAUzK,EAAMc,WAAYhB,EAAKc,GAAK,EAE1CR,GAAQsK,IAAKF,EAASC,EAAS3K,EAAK6K,OAAQ,EAAG,EAAI9H,KAAKoC,IAAI,KAIhEb,gBAAgB,UAAW,SAAStE,GAEhC,GAIIY,GAJAV,EAAQX,KAAKW,MACbI,EAAUf,KAAKe,QACfoK,EAAUxK,EAAMa,WAAYf,EAAKa,GAAK,GACtC8J,EAAUzK,EAAMc,WAAYhB,EAAKc,GAAK,EAyB1C,OAtBKd,GAAK8K,QAAU9K,EAAK+K,SAErBnK,EAAQZ,EAAK8K,QAAU9K,EAAK+K,QAE5BzK,EAAQM,MAAOA,EAAO,GAEtBN,EAAQsK,IAAKF,EAAU9J,EAAO+J,EAAS3K,EAAK8K,QAAUlK,EAAO,EAAG,EAAImC,KAAKoC,IAAI,GAE7E7E,EAAQM,MAAO,EAAIA,EAAO,KAI1BA,EAAQZ,EAAK+K,QAAU/K,EAAK8K,QAE5BxK,EAAQM,MAAO,EAAGA,GAElBN,EAAQsK,IAAKF,EAASC,EAAU/J,EAAOZ,EAAK+K,QAAUnK,EAAO,EAAG,EAAImC,KAAKoC,IAAI,GAE7E7E,EAAQM,MAAO,EAAG,EAAIA,IAInBrB,OAGX+E,gBAAgB,UAAW,SAAStE,GAKhC,IAAM,GAHFE,GAAQX,KAAKW,MACbI,EAAUf,KAAKe,QAET4G,EAAI,EAAGA,EAAIlH,EAAKqK,OAAO5E,OAAQyB,IAAM,CAE3C,GAAIrG,GAAIb,EAAKqK,OAAOnD,GAAG,GACnBpG,EAAId,EAAKqK,OAAOnD,GAAG,GACnB8D,EAAM9K,EAAMa,WAAYF,GACxBoK,EAAM/K,EAAMc,WAAYF,EAEjB,KAANoG,GAAU5G,EAAQ4J,OAAQc,EAAKC,GAEpC3K,EAAQmK,OAAQO,EAAKC,GAUzB,MALA3K,GAAQmK,OACJvK,EAAMa,WAAWf,EAAKqK,OAAO,GAAG,IAChCnK,EAAMc,WAAWhB,EAAKqK,OAAO,GAAG,KAG7B9K,OAGX+E,gBAAgB,OAAQ,SAAStE,GAgB7B,QAASkL,GAAWC,EAAOC,EAAMC,GAC7B,OAAQF,EAAQA,EAAQ,IAAM,KAAOC,GAAQ,IAAM,OAASC,GAAQ,cAf3E,GAECD,GACMD,EACAE,EACAC,EALHpL,EAAQX,KAAKW,MACVI,EAAUf,KAAKe,QAMfiL,IAGJJ,GAAQnL,EAAKmL,OAAS,GACtBC,EAAOpL,EAAKoL,MAAQ,GACpBC,EAAOrL,EAAKqL,MAAQ,GAMpBC,EAAaJ,EAAWlL,EAAKmL,MAAOnL,EAAKoL,KAAMpL,EAAKqL,MAEpD9L,KAAKiM,SAAW,SAASJ,GACrB,MAAKA,IACD7L,KAAKS,KAAKoL,KAAOA,EACVA,GAEA7L,KAAKS,KAAKoL,MAIzB7L,KAAKkM,UAAY,SAASN,GACtB,MAAKA,IACD5L,KAAKS,KAAKmL,MAAQA,EACXA,GAGJ5L,KAAKS,KAAKmL,OAGrB5L,KAAK8L,KAAO,SAASA,GACjB,MAAKA,IACD9L,KAAKS,KAAKqL,KAAOA,EACVA,GAGJ9L,KAAKS,KAAKmL,OAGrB5L,KAAKiB,MAAQ,WACT,MAAOF,GAAQoL,YAAY1L,EAAK2L,MAAQ,IAAInL,OAGhD8G,OAAOsE,eAAeL,EAAO,YACzBM,IAAK,WACD,MAAOV,IAEXW,IAAK,SAASX,GACVG,EAAaJ,EAAWC,EAAOnL,EAAKoL,KAAMpL,EAAKqL,SAIvD/D,OAAOsE,eAAeL,EAAO,WACzBM,IAAK,WACD,MAAOT,IAEXU,IAAK,SAASV,GACVE,EAAaJ,EAAWlL,EAAKmL,MAAOC,EAAMpL,EAAKqL,SAIvD/D,OAAOsE,eAAeL,EAAO,WACzBM,IAAK,WACD,MAAOR,IAEXS,IAAK,SAAST,GACVC,EAAaJ,EAAWlL,EAAKmL,MAAOnL,EAAKoL,KAAMC,MAI1D/K,EAAQ+K,KAAOC,EACfhL,EAAQ4I,UAAYlJ,EAAKqB,OAAS,OAClCf,EAAQyL,aAAe,MACvBzL,EAAQ0L,UAAYhM,EAAKiM,OAAS,OAClC3L,EAAQ4L,SACPlM,EAAK2L,MAAQ,GACbzL,EAAMa,WAAWf,EAAKa,GAAK,GAC3BX,EAAMc,WAAWhB,EAAKc,GAAK,MA2C7B1B,OAAOsC,eAAiBA,eAExBtC,OAAO4C,OAAS,SAASlC,EAAMG,EAAMD,EAAMkB,EAAOY,GAY9C,MAVAvC,MAAKU,KAAOA,EACZV,KAAKO,KAAOA,EAEZP,KAAKS,KAAOA,EAEZT,KAAKe,QAAUwB,EAEfvC,KAAK2B,MAAQA,EACb3B,KAAK2B,MAAME,KAAK7B,MAETA,MAGXH,OAAO4C,OAAOG,UAAYmF,OAAOsB,OAAOxJ,OAAOkI,OAAOnF,WAGtD/C,OAAO4C,OAAOG,UAAUgK,SAAW,SAAS5J,GAOxC,MAL0B,gBAAdhD,MAAKS,OACbT,KAAKS,MAAQuC,GAAO,EACpBhD,KAAKU,KAAKmC,cAGP7C,MAGXH,OAAO4C,OAAOG,UAAUiK,SAAW,SAAS7J,GACxC,MAAOhD,MAAK4M,UAAU5J,GAAO,KA0BjCb,eAAe,aAAc,SAASa,GAClCA,GAAY,IACZD,WAAWJ,KAAK3C,KAAMgD,KAI1Bb,eAAe,WAAY,SAASa,GAChCA,GAAOA,EAAM,IACbD,WAAWJ,KAAK3C,KAAMgD,KAiB1Bb,eAAe,UAAW,SAASa,GAC/BA,GAAY,IACZO,QAAQZ,KAAK3C,KAAMgD,KAGvBb,eAAe,SAAU,SAASa,GAC9BA,GAAOA,EAAM,IACbO,QAAQZ,KAAK3C,KAAMgD,KAIvBb,eAAe,UAAW,SAASa,GAE/BA,GAAY,GAEDhD,MAAKU,IAEhBV,MAAKe,QAAQkC,KAAK,SAAS3B,EAAGC,EAAG2B,GAE7B,MADAA,GAAMS,GAAKX,EACJE,MAsBfQ,UAAUoJ,gBAAkB,SAASnF,GACjC,GAAIoF,IAAav9BC,GAAa,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAE1wB,QAASD,EAAUpF,IAAMoF,EAAUA,EAAU7G,OAAS,GAAI8G,EAAUrF,IAAMqF,EAAUA,EAAU9G,OAAS,KAI3G/D,eAAe,OAAQ,SAASa,GAE5B,GAAKiK,MAAMjK,IAAc,EAANA,EAAU,MAAOhD,KAEpCgD,GAAMQ,KAAKC,MAAMT,EAEjB,IAAIkK,GAAa,EACbjM,EAAQjB,KAAKU,KAAKO,QAClBE,EAASnB,KAAKU,KAAKS,SACnBgM,EAAclM,EAAQ,EACtBmM,EAAejM,EAAS,EACxBkM,EAAcrK,EAAM,EACpBsK,EAAM,EAAItK,EAAM,EAChBuK,EAAU7J,UAAUoJ,gBAAgB9J,GAAK,GACzCwK,EAAU9J,UAAUoJ,gBAAgB9J,GAAK,GAEzCyK,EAAKP,EACL/E,EAAYnI,KAAKe,QAAQyH,cAE7B,IAAKL,EAAY,CACb,GAEI7G,GAAGC,EAAGoG,EAAG+F,EAAGC,EAAIC,EAAIC,EAAIC,EAAOC,EAAOC,EAAOC,EAG7CC,EAAIC,EAAIC,EAAIC,EAIZC,EACAC,EAVAnG,EAASD,EAAU1H,KAOnB+N,EAAa,GAAI9K,WACjB/B,EAAQ6M,CAIZ,KAAM7G,EAAI,EAAO2F,EAAJ3F,EAASA,IAClBhG,EAAQA,EAAMiC,KAAO,GAAIF,WACpBiE,IAAM0F,IAAciB,EAAW3M,EAOxC,KAJAA,EAAMiC,KAAO4K,EACbD,EAAU,KAGFd,IAAO,GAAI,CAKf,IAHAI,EAAKD,EAAK,EAGJrM,EAAIJ,IAAUI,EAAI,IAAM,CAU1B,IAPAuM,EAAQT,GAAgBa,EAAK9F,EAAOwF,IACpCG,EAAQV,GAAgBc,EAAK/F,EAAOwF,EAAK,IACzCI,EAAQX,GAAgBe,EAAKhG,EAAOwF,EAAK,IACzCK,EAAQZ,GAAgBgB,EAAKjG,EAAOwF,EAAK,IAEzCjM,EAAQ6M,EAEF7G,EAAI0F,IAAe1F,EAAI,IACzBhG,EAAMwB,EAAI+K,EACVvM,EAAMyB,EAAI+K,EACVxM,EAAM0B,EAAI+K,EACVzM,EAAMgC,EAAI0K,EAEV1M,EAAQA,EAAMiC,IAGlB,KAAM+D,EAAI,EAAO0F,EAAJ1F,EAAiBA,IAE1B+F,EAAIE,IAAsBjG,EAAdwF,EAAkBA,EAAcxF,IAAO,GAEnDmG,GAAWnM,EAAMwB,EAAIiF,EAAOsF,GAC5BK,GAAWpM,EAAMyB,EAAIgF,EAAOsF,EAAI,GAChCM,GAAWrM,EAAM0B,EAAI+E,EAAOsF,EAAI,GAChCO,GAAWtM,EAAMgC,EAAIyE,EAAOsF,EAAI,GAEhC/L,EAAQA,EAAMiC,IAKlB,KAFA2K,EAAUC,EAEJlN,EAAI,EAAOL,EAAJK,EAAWA,IACpB8G,EAAOwF,KAASE,EAAQP,IAAaC,EACrCpF,EAAOwF,KAASG,EAAQR,IAAaC,EACrCpF,EAAOwF,KAASI,EAAQT,IAAaC,EACrCpF,EAAOwF,KAASK,EAAQV,IAAaC,EAErCE,EAAMG,IAASH,EAAIpM,EAAI0B,EAAM,GAAMmK,EAAcO,EAAIP,IAAmB,EAExEW,GAASS,EAAQpL,GAAMoL,EAAQpL,EAAIiF,EAAOsF,IAC1CK,GAASQ,EAAQnL,GAAMmL,EAAQnL,EAAIgF,EAAOsF,EAAI,IAC9CM,GAASO,EAAQlL,GAAMkL,EAAQlL,EAAI+E,EAAOsF,EAAI,IAC9CO,GAASM,EAAQ5K,GAAM4K,EAAQ5K,EAAIyE,EAAOsF,EAAI,IAE9Ca,EAAUA,EAAQ3K,IAItBiK,IAAM5M,EAGV,IAAMK,EAAI,EAAOL,EAAJK,EAAWA,IAAM,CAY1B,IATAsM,EAAKtM,GAAK,EAEVwM,EAAQT,GAAgBa,EAAK9F,EAAOwF,IACpCG,EAAQV,GAAgBc,EAAK/F,EAAOwF,EAAK,IACzCI,EAAQX,GAAgBe,EAAKhG,EAAOwF,EAAK,IACzCK,EAAQZ,GAAgBgB,EAAKjG,EAAOwF,EAAK,IAEzCjM,EAAQ6M,EAEF7G,EAAI,EAAO0F,EAAJ1F,EAAiBA,IAC1BhG,EAAMwB,EAAI+K,EACVvM,EAAMyB,EAAI+K,EACVxM,EAAM0B,EAAI+K,EACVzM,EAAMgC,EAAI0K,EACV1M,EAAQA,EAAMiC,IAKlB,KAFA+J,EAAK1M,EAEC0G,EAAI,EAAQ3E,GAAL2E,EAAUA,IACnBiG,EAAOD,EAAKrM,GAAO,EAEnBwM,GAAWnM,EAAMwB,EAAIiF,EAAOwF,GAC5BG,GAAWpM,EAAMyB,EAAIgF,EAAOwF,EAAK,GACjCI,GAAWrM,EAAM0B,EAAI+E,EAAOwF,EAAK,GACjCK,GAAWtM,EAAMgC,EAAIyE,EAAOwF,EAAK,GAEjCjM,EAAQA,EAAMiC,KAELwJ,EAAJzF,IAAmBgG,GAAM1M,EAMlC,KAHA2M,EAAKtM,EACLiN,EAAUC,EAEJjN,EAAI,EAAOJ,EAAJI,EAAYA,IAErBmM,EAAIE,GAAM,EAEVxF,EAAOsF,EAAI,GAAKW,EAAKJ,EAAQV,IAAaC,EAErCa,EAAK,GACNA,EAAK,IAAMA,EACXjG,EAAOsF,IAASI,EAAQP,IAAaC,GAAYa,EACjDjG,EAAOsF,EAAI,IAAOK,EAAQR,IAAaC,GAAYa,EACnDjG,EAAOsF,EAAI,IAAOM,EAAQT,IAAaC,GAAYa,GAEnDjG,EAAOsF,GAAKtF,EAAOsF,EAAI,GAAKtF,EAAOsF,EAAI,GAAK,EAGhDA,EAAMpM,IAASoM,EAAInM,EAAI8L,GAAeD,EAAeM,EAAIN,GAAiBnM,GAAY,EAEtF6M,GAASS,EAAQpL,GAAMoL,EAAQpL,EAAIiF,EAAOsF,IAC1CK,GAASQ,EAAQnL,GAAMmL,EAAQnL,EAAIgF,EAAOsF,EAAI,IAC9CM,GAASO,EAAQlL,GAAMkL,EAAQlL,EAAI+E,EAAOsF,EAAI,IAC9CO,GAASM,EAAQ5K,GAAM4K,EAAQ5K,EAAIyE,EAAOsF,EAAI,IAE9Ca,EAAUA,EAAQ3K,KAElBgK,GAAM3M,GAKlBjB,KAAKe,QAAQ2H,aAAcP,MAInCtI,OAAOsC,eAAe,SAAU,WAC5BnC,KAAKe,QAAQkC,KAAK,SAAS3B,EAAGC,EAAG2B,GAK7B,MAJAA,GAAMC,EAAI,IAAMD,EAAMC,EACtBD,EAAME,EAAI,IAAMF,EAAME,EACtBF,EAAMG,EAAI,IAAMH,EAAMG,EAEfH,KAIf,IAAIuL,SAAU,QAAS,YAAa,YAAa,aAAc,aAAc,WAAY,YAAa,UAqBtGA,QAAOpI,QAAQ,SAASqI,GACpB7O,OAAO+C,UAAU8L,GAAO,SAASrM,GAE7B,GAAIsM,GAAW9K,cAAc7D,KAAMqC,EAAIqM,EAGvC,OADA1O,MAAKa,OAAO+N,iBAAiBF,EAAKC,EAAS7K,MACpC9D,QAIfH,OAAO+C,UAAUiM,GAAK,SAASH,EAAKrM,GAWhC,MATAqM,GAAMA,EAAII,MAAM,KAEhBJ,EAAIrI,QAAQ,SAAS0I,GACjB,GAAIJ,GAAW9K,cAAc7D,KAAMqC,EAAI0M,EAClCN,QAAO7F,QAAQmG,GAAM,IACtB/O,KAAKa,OAAO+N,iBAAiBG,EAAIJ,EAAS7K,OAE/C9D,MAEIA,OAWT,QAAS,UAAWqG,QAAQ,SAAU2I,GAEvCnP,OAAO+C,UAAUoM,GAAS,SAAUlP,EAAKmP,GAGxC,MAAMnP,IAINE,KAAKa,OAAOmO,GAASlP,EACrBE,KAAKmH,OAAOd,QAAQ,SAAS1F,GAC5BA,EAAMqO,GAAOlP,EAAKmP,KAGZjP,MATYA,KAAKa,OAAOmO,IAahCnP,OAAOiD,MAAMF,UAAUoM,GAAS,SAASlP,EAAKmP,GAE7C,GAAIC,EAEJ,OAAMpP,IAGNA,EAAME,KAAK,aAAyB,UAAVgP,EAAoB,IAAM,MAAMlP,GAG1DD,OAAO6E,MAAM2B,QAAQrG,KAAK4B,SAAU,SAASyF,GAC5CA,EAAQxG,OAAOmO,GAASlP,IAIzBoP,EAAQD,EAASnP,EAAME,KAAKa,OAAOmO,GAAS,EAEvCC,IAEW,UAAVD,IAAoBhP,KAAKqB,MAAMC,GAAK4N,GAC1B,WAAVF,IAAqBhP,KAAKqB,MAAME,GAAK2N,GAE1ClP,KAAKa,OAAOmO,GAASlP,GAGtBE,KAAKU,KAAKmC,aAEH7C,MAvBYA,KAAKa,OAAOmO","file":"martin.min.js","sourcesContent":["/*\n    Martin.js: In-browser photo and image editing\n    Author: Scott Donaldson\n    Contact: scott.p.donaldson@gmail.com\n    Twitter: @scottpdonaldson\n\n    ----------------------------------------\n\n    MARTIN\n*/\n\n// The great initializer. Pass in a string to select element by ID,\n// or an HTMLElement\nfunction Martin( val, options ) {\n\n    if ( !(this instanceof Martin) ) return new Martin( val, options );\n\n    // Set the original element, if there is one\n    this.original = null;\n    if ( typeof val === 'string' ) {\n        this.original = document.getElementById(val);\n    } else if ( val instanceof HTMLElement ) {\n        this.original = val;\n    }\n\n    this.options = options || {};\n\n    // Now prepare yourself...\n    return this.makeCanvas();\n};\n\nMartin.prototype.makeCanvas = require('./core/init.js');\n\nMartin.utils = {};\n\nvar utils = require('./core/utils.js');\n\nfor ( var types in utils ) {\n    for ( var func in utils[types] ) {\n        if ( type === '_private' ) {\n            Martin.utils[func] = utils[types][func];\n        } else {\n            Martin.prototype[func] = utils[types][func];\n        }\n    }\n}\n\nmodule.exports = Martin;\nvar registerElement = require('./element/register.js');\n\n// Convert an image to a canvas or just return the canvas.\nmodule.exports = function makeCanvas() {\n\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // Create an empty layer\n    this.newLayer();\n\n    if ( this.original ) {\n\n        if ( this.original.tagName === 'IMG' ) {\n\n            var canvas = this.canvas,\n                context = this.context,\n                original = this.original;\n\n            function d() {\n\n                canvas.width = original.naturalWidth;\n                canvas.height = original.naturalHeight;\n\n                this.width(canvas.width);\n                this.height(canvas.height);\n\n                original.parentNode.insertBefore( canvas, original );\n                original.parentNode.removeChild( original );\n\n                // Give that layer some image data (see src/element/image.js)\n                Martin.registerElement('image', function(img) {\n                    drawImage.call(this, img);\n                });\n\n                this.image(original);\n            }\n\n            // This should only fire once! Fire if the image is complete,\n            // or add a handler for once it has finished loading.\n            if ( original.complete ) return d.call(this);\n            original.onload = d.bind(this);\n\n        } else if ( this.original.tagName === 'CANVAS' ) {\n\n            this.canvas = this.original;\n            this.context = this.original.getContext('2d');\n        }\n    }\n\n    // only render and execute callback immediately\n    // if the original is not an image\n    this.autorender();\n\n    return this;\n};\n\nmodule.exports = '0.4.0';\n\n/*\n    For helper functions that don't extend Martin prototype.\n\n    degToRad()\n    radToDeg()\n    hexToRGB()\n*/\n\nMartin.degToRad = function(deg) {\n    return deg * ( Math.PI / 180 );\n};\n\nMartin.radToDeg = function(rad) {\n    return rad * ( 180 / Math.PI );\n};\n\nMartin.hexToRGB = function( hex ) {\n\n    if ( !hex ) { return false; }\n\n    if ( hex.slice(0, 1) === '#' ) { hex = hex.slice(1); }\n\n    var r, g, b;\n\n    if ( hex.length === 6 ) {\n\n        r = hex.slice(0, 2);\n        g = hex.slice(2, 4);\n        b = hex.slice(4, 6);\n\n    } else if ( hex.length === 3 ) {\n\n        r = hex.slice(0, 1) + hex.slice(0, 1);\n        g = hex.slice(1, 2) + hex.slice(1, 2);\n        b = hex.slice(2, 3) + hex.slice(2, 3);\n\n    }\n\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16)\n    };\n\n};\n\nmodule.exports = {\n\n    _private: {\n\n        forEach: function forEach(arr, cb) {\n            if (arr) {\n                arr.forEach(cb);\n            }\n        },\n\n        noop: function noop() {}\n\n    },\n\n    _public: {\n\n        // Extend Martin with plugins, if you want\n        extend: function extend( obj ) {\n            for ( var method in obj ) {\n                if ( Martin.prototype.hasOwnProperty(method) ) {\n                    throw new Error('Careful! This method already exists on the Martin prototype. Try a different name after checking the docs: http://martinjs.org');\n                } else {\n                    Martin.prototype[method] = obj[method];\n                }\n            }\n        },\n\n        remove: function remove() {\n            var canvas = this.canvas,\n                parent = canvas.parentNode;\n            if ( parent ) parent.removeChild(this.canvas);\n            return this;\n        },\n\n        // Render: looping through layers, loop through elements\n        // and render each (with optional callback)\n        render: function render(cb) {\n\n            var ctx = this.context;\n\n            ctx.clearRect(0, 0, this.width(), this.height());\n\n            Martin.utils.forEach(this.layers, function(layer) {\n\n                layer.clear();\n\n                Martin.utils.forEach(layer.elements, function renderElement(element) {\n                    element.renderElement && element.renderElement();\n                });\n\n                Martin.utils.forEach(layer.effects, function renderEffect(effect) {\n                    effect.renderEffect && effect.renderEffect();\n                });\n\n                ctx.drawImage(layer.canvas, 0, 0);\n            });\n\n            if (cb) return cb();\n\n            return this;\n        },\n\n        // Autorender: Only render if the `autorender` option is not false\n        autorender: function autorender(cb) {\n            if ( this.options.autorender !== false ) return this.render(cb);\n            return cb ? cb() : null;\n        },\n\n        // Return's a data URL of all the working layers\n        toDataURL: function toDataURL() {\n            return this.canvas.toDataURL();\n        },\n\n        // Get the dataURL of the merged layers of the canvas,\n        // then turn that into one image\n        convertToImage: function convertToImage() {\n\n            var dataURL = this.toDataURL(),\n                img = document.createElement('img');\n\n            img.src = dataURL;\n\n            this.layers.forEach(function(layer, i){\n                this.deleteLayer(i);\n            }, this);\n\n            if ( this.container ) this.container.appendChild( img );\n\n        }\n    }\n};\n// shared methods for objects: layers, elements, effects\n\nMartin.Object = function() {};\nvar ObjMethods,\n    ObjMethod;\n\nObjMethods = {\n\n    loop: function(cb, put) {\n\n        var width = this.base.width(),\n            height = this.base.height();\n\n        var imageData, pixels, len,\n            n, x, y,\n            r, g, b, a,\n            pixel,\n            output;\n\n        imageData = this.getImageData();\n\n        if ( imageData ) {\n\n            pixels = imageData.data;\n            len = pixels.length;\n\n            for ( var i = 0; i < len; i += 4 ) {\n\n                // xy coordinates\n                n = i / 4;\n                x = n % width;\n                y = Math.floor(n / width);\n\n                // rgba values\n                r = pixels[i];\n                g = pixels[i + 1];\n                b = pixels[i + 2];\n                a = pixels[i + 3];\n\n                // pass an object corresponding to the pixel to the callback\n                pixel = { r: r, g: g, b: b, a: a };\n\n                // execute the callback within the context of this layer's, uh... context\n                output = cb.call( this.context, x, y, pixel );\n\n                // reassign the actual rgba values of the pixel based on the output from the loop\n                pixels[i] = output.r;\n                pixels[i + 1] = output.g;\n                pixels[i + 2] = output.b;\n                pixels[i + 3] = output.a;\n\n            }\n\n            // explicitly declare if image data from callback is not to be used\n            if ( put !== false ) this.putImageData( imageData );\n\n        }\n\n        return this;\n    },\n\n    getImageData: function() {\n        var imageData = this.context && this.canvas.width > 0 && this.canvas.height > 0 ?\n            this.context.getImageData(0, 0, this.canvas.width, this.canvas.height) :\n            null;\n        return imageData;\n    },\n\n    // Simple shell for putting image data\n    putImageData: function(imageData) {\n        this.context.putImageData( imageData, 0, 0 );\n        return this;\n    },\n\n    clear: function clear() {\n        this.context.clearRect(0, 0, this.base.width(), this.base.height());\n        return this;\n    },\n\n    stackIndex: function() {\n        return this.stack.indexOf(this);\n    },\n\n    remove: function() {\n        this.stack.splice(this.stackIndex(), 1);\n        this.base.autorender();\n        return this;\n    },\n\n    bump: function(i) {\n        var index = this.stackIndex();\n        this.remove();\n        this.stack.splice(index + i, 0, this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpUp: function() {\n        return this.bump(1);\n    },\n\n    bumpDown: function() {\n        return this.bump(-1);\n    },\n\n    bumpToTop: function() {\n        this.remove();\n        this.stack.push(this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpToBottom: function() {\n        this.remove();\n        this.stack.unshift(this);\n        this.base.autorender();\n        return this;\n    },\n};\n\nfor ( ObjMethod in ObjMethods ) {\n    Martin.Object.prototype[ObjMethod] = ObjMethods[ObjMethod];\n}\n\n/*\n\n    Martin.Layer constructor\n\n    Methods:\n    .normalizeX()\n    .normalizeY()\n    .normalizePercentX()\n    .normalizePercentY()\n    .loop()\n    .setContext()\n    .getImageData()\n    .putImageData()\n    .render()\n    .clear()\n    .remove()\n\n    Methods for working with Layers\n\n    .newLayer()\n    .layer()\n*/\n\n// ----- Layer constructor\nMartin.Layer = function(base, arg) {\n\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n    this.context = this.canvas.getContext('2d');\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.elements = [];\n    this.effects = [];\n\n    // if no layers yet (initializing),\n    // the layers are just this new layer,\n    // and the new layer's context should be the base's\n    if ( !this.base.layers ) {\n        this.base.layers = [];\n    }\n    this.stack = this.base.layers;\n    this.stack.push(this);\n\n    if ( typeof arg === 'string' ) {\n        this.type = arg;\n    } else {\n        for ( var i in arg ) this[i] = arg[i];\n    }\n\n    return this;\n\n};\n\nMartin.Layer.prototype = Object.create(Martin.Object.prototype);\n\n// Normalize X and Y values\nMartin.Layer.prototype.normalizeX = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentX( +val.slice(0, -1) );\n    }\n    return val / this.scale.x;\n};\n\nMartin.Layer.prototype.normalizeY = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentY( +val.slice(0, -1) );\n    }\n    return val / this.scale.y;\n};\n\nMartin.Layer.prototype.normalizePercentX = function( val ) {\n    return ( val / 100 ) * this.canvas.width;\n};\n\nMartin.Layer.prototype.normalizePercentY = function( val ) {\n    return ( val / 100 ) * this.canvas.height;\n};\n\n// Create a new (top-most) layer and switch to that layer.\nMartin.prototype.newLayer = function(arg) {\n\n    var newLayer = new Martin.Layer(this, arg);\n\n    this.currentLayer = newLayer;\n\n    this.autorender();\n\n    return newLayer;\n\n};\n\n// Switch the context and return the requested later\nMartin.prototype.layer = function( num ) {\n\n    this.currentLayer = this.layers[num || 0];\n\n    return this.layers[num || 0];\n\n};\n\n/*\n\n    Martin.Element constructor\n\n    Element methods:\n    .update()\n    .moveTo()\n*/\n\nfunction Element(type, caller, data) {\n\n    var base = caller.base || caller,\n        layer = caller.currentLayer || caller;\n\n    // base refers to the instance of Martin\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // TODO: bounding box\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.data = data || {};\n    if ( data.x ) this.data.x = layer.normalizeX(data.x);\n    if ( data.y ) this.data.y = layer.normalizeY(data.y);\n    this.type = type;\n    this.layer = layer;\n\n    this.effects = [];\n\n    this.stack = this.layer.elements;\n    this.stack.push(this);\n\n    // automatically push backgrounds to the bottom of the layer\n    if ( this.type === 'background' ) {\n        this.data = {\n            color: data\n        };\n        this.bumpToBottom();\n    }\n\n    return this;\n};\n\nElement.prototype = Object.create(Martin.Object.prototype);\n\n// Set the fill, stroke, alpha for a new shape\nElement.prototype.setContext = function( obj ) {\n\n    var context = this.context;\n\n    context.save();\n\n    context.fillStyle = obj.color || '#000';\n    context.fill();\n\n    context.scale(\n        this.scale.x,\n        this.scale.y\n    );\n\n    context.globalAlpha = obj.alpha || 1;\n\n    context.lineWidth = obj.strokeWidth ? obj.strokeWidth : 0;\n    context.lineCap = obj.cap ? obj.cap : 'square';\n    context.strokeStyle = obj.stroke ? obj.stroke : 'transparent';\n    context.stroke();\n\n    context.restore();\n\n};\n\n// ----- Update an element with new data\nElement.prototype.update = function(arg1, arg2) {\n\n    var key, value, data;\n\n    if ( arg2 ) {\n        key = arg1;\n        value = arg2;\n        this.data[key] = value;\n    } else {\n        for ( key in arg1 ) {\n            value = arg1[key];\n            this.data[key] = value;\n        }\n    }\n\n    this.base.autorender();\n};\n\n// ----- Move an element to new coordinates\nElement.prototype.moveTo = function(x, y) {\n\n    var data = this.data;\n\n    // if no params given, move to 0, 0\n    x = x || 0;\n    y = y || 0;\n\n    if ( this.type === 'line' ) {\n        data.endX += x - data.x;\n        data.endY += y - data.y;\n    } else if ( this.type === 'polygon' ) {\n        data.points.forEach(function(pt, i) {\n            if ( i > 0 ) {\n                var thisX = pt[0],\n                    thisY = pt[1];\n                data.points[i] = [\n                    thisX + (x - data.points[0][0]),\n                    thisY + (y - data.points[0][1])\n                ];\n            }\n        });\n        data.points[0] = [x, y];\n    }\n\n    data.x = x;\n    data.y = y;\n\n    this.base.autorender();\n\n    return this;\n\n};\n\nmodule.exports = Element;\nfunction drawImage(img) {\n    this.context.drawImage( img, 0, 0 );\n}\n\nregisterElement('image', function(img) {\n    drawImage.call(this, img);\n});\n\nfunction rect(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.rect(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 ),\n        layer.normalizeX( data.width || layer.width() ),\n        layer.normalizeY( data.height || layer.height() )\n    );\n}\n\nregisterElement('rect', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('background', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('line', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.moveTo(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 )\n    );\n\n    context.lineTo(\n        layer.normalizeX( data.endX ),\n        layer.normalizeY( data.endY )\n    );\n\n    if ( !data.strokeWidth ) data.strokeWidth = 1;\n    data.stroke = data.color ? data.color : '#000';\n\n    return this;\n});\n\nregisterElement('circle', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 );\n\n    context.arc( centerX, centerY, data.radius, 0, 2 * Math.PI, false);\n\n});\n\nregisterElement('ellipse', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 ),\n        scale;\n\n    if ( data.radiusX > data.radiusY ) {\n\n        scale = data.radiusX / data.radiusY;\n\n        context.scale( scale, 1 );\n\n        context.arc( centerX / scale, centerY, data.radiusX / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1 / scale, 1 );\n\n    } else {\n\n        scale = data.radiusY / data.radiusX;\n\n        context.scale( 1, scale );\n\n        context.arc( centerX, centerY / scale, data.radiusY / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1, 1 / scale );\n\n    }\n\n    return this;\n});\n\nregisterElement('polygon', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    for ( var i = 0; i < data.points.length; i++ ) {\n\n        var x = data.points[i][0],\n            y = data.points[i][1],\n            toX = layer.normalizeX( x ),\n            toY = layer.normalizeY( y );\n\n        if ( i === 0 ) context.moveTo( toX, toY );\n\n        context.lineTo( toX, toY );\n\n    }\n\n    // close the path\n    context.lineTo(\n        layer.normalizeX(data.points[0][0]),\n        layer.normalizeY(data.points[0][1])\n    );\n\n    return this;\n});\n\nregisterElement('text', function(data) {\n\n\tvar layer = this.layer,\n        context = this.context,\n\t\tsize,\n        style,\n        font,\n        fontOutput;\n\n    var clone = {};\n\n    // use custom getters and setters for these properties\n    style = data.style || '';\n    size = data.size || '';\n    font = data.font || '';\n\n    function fontString(style, size, font) {\n        return (style ? style + ' ' : '') + (size || 16) + 'px ' + (font || 'sans-serif');\n    };\n\n    fontOutput = fontString(data.style, data.size, data.font);\n\n    this.fontSize = function(size) {\n        if ( size ) {\n            this.data.size = size;\n            return size;\n        } else {\n            return this.data.size;\n        }\n    };\n\n    this.fontStyle = function(style) {\n        if ( style ) {\n            this.data.style = style;\n            return style;\n        }\n\n        return this.data.style;\n    };\n\n    this.font = function(font) {\n        if ( font ) {\n            this.data.font = font;\n            return font;\n        }\n\n        return this.data.style;\n    };\n\n    this.width = function() {\n        return context.measureText(data.text || '').width;\n    };\n\n    Object.defineProperty(clone, 'theStyle', {\n        get: function() {\n            return style;\n        },\n        set: function(style) {\n            fontOutput = fontString(style, data.size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theSize', {\n        get: function() {\n            return size;\n        },\n        set: function(size) {\n            fontOutput = fontString(data.style, size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theFont', {\n        get: function() {\n            return font;\n        },\n        set: function(font) {\n            fontOutput = fontString(data.style, data.size, font);\n        }\n    });\n\n\tcontext.font = fontOutput;\n\tcontext.fillStyle = data.color || '#000';\n\tcontext.textBaseline = 'top';\n\tcontext.textAlign = data.align || 'left';\n\tcontext.fillText(\n\t\tdata.text || '',\n\t\tlayer.normalizeX(data.x || 0),\n\t\tlayer.normalizeY(data.y || 0)\n\t);\n});\n\n/*\n\n    Martin.Effect constructor\n\n    Effect methods:\n    .increase()\n    .decrease()\n*/\n\nfunction registerEffect(name, cb) {\n\n    function attachRender(data, stack, stackContainer) {\n\n        // create new effect\n        var effect = new Martin.Effect(name, this, data, stack, stackContainer);\n\n        // attach render function (callback) --\n        // execute with effect's data\n        effect.renderEffect = function renderEffect() {\n            cb.call(effect, this.data);\n        };\n\n        return effect;\n    }\n\n    Martin.prototype[name] = function attachToBase(data) {\n        var effect = attachRender.call(this, data, this.currentLayer.effects, this.currentLayer);\n        this.autorender();\n        return effect;\n    };\n\n    Martin.Layer.prototype[name] =\n    Martin.Element.prototype[name] = function attachToLayerOrElement(data) {\n        var effect = attachRender.call(this.base, data, this.effects, this);\n        this.base.autorender();\n        return effect;\n    };\n};\n\nMartin.registerEffect = registerEffect;\n\nMartin.Effect = function(type, base, data, stack, stackContainer) {\n\n    this.base = base;\n    this.type = type;\n\n    this.data = data;\n\n    this.context = stackContainer;\n\n    this.stack = stack;\n    this.stack.push(this);\n\n    return this;\n};\n\nMartin.Effect.prototype = Object.create(Martin.Object.prototype);\n\n// Adjust the intensity of an Effect (linear effects only)\nMartin.Effect.prototype.increase = function(amt) {\n\n    if ( typeof this.data === 'number' ) {\n        this.data += amt || 1;\n        this.base.autorender();\n    }\n\n    return this;\n};\n\nMartin.Effect.prototype.decrease = function(amt) {\n    return this.increase(-amt || -1);\n};\n\n// Desaturate\nfunction desaturate(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        var r = pixel.r,\n            g = pixel.g,\n            b = pixel.b;\n\n        var grayscale = r * 0.3 + g * 0.59 + b * 0.11;\n            r = (1 - amt) * r + amt * grayscale;        // red\n            g = (1 - amt) * g + amt * grayscale;        // green\n            b = (1 - amt) * b + amt * grayscale;        // blue\n\n        pixel.r = r;\n        pixel.g = g;\n        pixel.b = b;\n\n        return pixel;\n\n    });\n}\n\nregisterEffect('desaturate', function(amt) {\n    amt = amt / 100;\n    desaturate.call(this, amt);\n});\n\n// inverse of saturate\nregisterEffect('saturate', function(amt) {\n    amt = -amt / 100;\n    desaturate.call(this, amt);\n});\n\n// Lighten and darken. (Darken just returns the opposite of lighten).\n// Takes an input from 0 to 100. Higher values return pure white or black.\nfunction lighten(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        pixel.r += Math.round(amt * 255);\n        pixel.g += Math.round(amt * 255);\n        pixel.b += Math.round(amt * 255);\n\n        return pixel;\n    });\n}\n\nregisterEffect('lighten', function(amt) {\n    amt = amt / 100;\n    lighten.call(this, amt);\n});\n\nregisterEffect('darken', function(amt) {\n    amt = -amt / 100;\n    lighten.call(this, amt);\n});\n\n// Fade uniform\nregisterEffect('opacity', function(amt) {\n\n    amt = amt / 100;\n\n    var base = this.base;\n\n    this.context.loop(function(x, y, pixel) {\n        pixel.a *= amt;\n        return pixel;\n    });\n});\n\n/*\n *\n * StackBlur Algorithm Copyright (c) 2010 Mario Klingemann\n * Version: 0.6\n * Author:\tMario Klingemann\n * Contact: mario@quasimondo.com\n * Website:\thttp://www.quasimondo.com/StackBlurForCanvas\n * Twitter:\t@quasimondo\n *\n */\n\n// simple stack maker\nfunction BlurStack() {\n    this.r = this.g = this.b = this.a = 0;\n    this.next = null;\n}\n\n// helper functions for .blur()\nBlurStack.mul_shift_table = function(i) {\n    var mul_table = [1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265,497,469,443,421,25,191,365,349,335,161,155,149,9,278,269,261,505,245,475,231,449,437,213,415,405,395,193,377,369,361,353,345,169,331,325,319,313,307,301,37,145,285,281,69,271,267,263,259,509,501,493,243,479,118,465,459,113,446,55,435,429,423,209,413,51,403,199,393,97,3,379,375,371,367,363,359,355,351,347,43,85,337,333,165,327,323,5,317,157,311,77,305,303,75,297,294,73,289,287,71,141,279,277,275,68,135,67,133,33,262,260,129,511,507,503,499,495,491,61,121,481,477,237,235,467,232,115,457,227,451,7,445,221,439,218,433,215,427,425,211,419,417,207,411,409,203,202,401,399,396,197,49,389,387,385,383,95,189,47,187,93,185,23,183,91,181,45,179,89,177,11,175,87,173,345,343,341,339,337,21,167,83,331,329,327,163,81,323,321,319,159,79,315,313,39,155,309,307,153,305,303,151,75,299,149,37,295,147,73,291,145,289,287,143,285,71,141,281,35,279,139,69,275,137,273,17,271,135,269,267,133,265,33,263,131,261,130,259,129,257,1];\n\n\n    var shg_table = [0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13,14,14,14,14,10,13,14,14,14,13,13,13,9,14,14,14,15,14,15,14,15,15,14,15,15,15,14,15,15,15,15,15,14,15,15,15,15,15,15,12,14,15,15,13,15,15,15,15,16,16,16,15,16,14,16,16,14,16,13,16,16,16,15,16,13,16,15,16,14,9,16,16,16,16,16,16,16,16,16,13,14,16,16,15,16,16,10,16,15,16,14,16,16,14,16,16,14,16,16,14,15,16,16,16,14,15,14,15,13,16,16,15,17,17,17,17,17,17,14,15,17,17,16,16,17,16,15,17,16,17,11,17,16,17,16,17,16,17,17,16,17,17,16,17,17,16,16,17,17,17,16,14,17,17,17,17,15,16,14,16,15,16,13,16,15,16,14,16,15,16,12,16,15,16,17,17,17,17,17,13,16,15,17,17,17,16,15,17,17,17,16,15,17,17,14,16,17,17,16,17,17,16,15,17,16,14,17,16,15,17,16,17,17,16,17,15,16,17,14,17,16,15,17,16,17,13,17,16,17,17,16,17,14,17,16,17,16,17,16,17,9];\n\n    return [ mul_table[i] || mul_table[mul_table.length - 1], shg_table[i] || shg_table[shg_table.length - 1] ];\n};\n\n// And, what we've all been waiting for:\nregisterEffect('blur', function(amt) {\n\n    if ( isNaN(amt) || amt < 1 ) return this;\n    // Round to nearest pixel\n    amt = Math.round(amt);\n\n    var iterations = 2,\t\t\t// increase for smoother blurring\n        width = this.base.width(),\n        height = this.base.height(),\n        widthMinus1 = width - 1,\n        heightMinus1 = height - 1,\n        radiusPlus1 = amt + 1,\n        div = 2 * amt + 1,\n        mul_sum = BlurStack.mul_shift_table(amt)[0],\n        shg_sum = BlurStack.mul_shift_table(amt)[1];\n\n    var it = iterations, // internal iterations in case doing multiple layers\n        imageData = this.context.getImageData();\n\n    if ( imageData ) {\n        var pixels = imageData.data;\n\n        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n            r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n            pr, pg, pb, pa;\n\n        var stackStart = new BlurStack(),\n            stack = stackStart,\n            stackEnd,\n            stackIn;\n\n        for ( i = 1; i < div; i++ ) {\n            stack = stack.next = new BlurStack();\n            if ( i === radiusPlus1 ) stackEnd = stack;\n        }\n\n        stack.next = stackStart;\n        stackIn = null;\n\n        // repeat for as many iterations as given\n        while ( it-- > 0 ) {\n\n            yw = yi = 0;\n\n            // loop through rows from top down\n            for ( y = height; --y > -1; ) {\n\n                // start summing pixel values\n                r_sum = radiusPlus1 * ( pr = pixels[yi] );\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1] );\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2] );\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3] );\n\n                stack = stackStart;\n\n                for ( i = radiusPlus1; --i > -1; ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n\n                    stack = stack.next;\n                }\n\n                for ( i = 1; i < radiusPlus1; i++ ) {\n\n                    p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\n                    r_sum += ( stack.r = pixels[p]);\n                    g_sum += ( stack.g = pixels[p + 1]);\n                    b_sum += ( stack.b = pixels[p + 2]);\n                    a_sum += ( stack.a = pixels[p + 3]);\n\n                    stack = stack.next;\n                }\n\n                stackIn = stackStart;\n\n                for ( x = 0; x < width; x++ ) {\n                    pixels[yi++] = (r_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (g_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (b_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (a_sum * mul_sum) >>> shg_sum;\n\n                    p = ( yw + ( ( p = x + amt + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n                }\n\n                // next row\n                yw += width;\n            }\n\n            for ( x = 0; x < width; x++ ) {\n\n                // with each column, divide yi by 4 (4 values per px)\n                yi = x << 2;\n\n                r_sum = radiusPlus1 * ( pr = pixels[yi]);\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1]);\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2]);\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3]);\n\n                stack = stackStart;\n\n                for ( i = 0; i < radiusPlus1; i++ ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n                    stack = stack.next;\n                }\n\n                yp = width;\n\n                for ( i = 1; i <= amt; i++ ) {\n                    yi = ( yp + x ) << 2;\n\n                    r_sum += ( stack.r = pixels[yi]);\n                    g_sum += ( stack.g = pixels[yi + 1]);\n                    b_sum += ( stack.b = pixels[yi + 2]);\n                    a_sum += ( stack.a = pixels[yi + 3]);\n\n                    stack = stack.next;\n\n                    if ( i < heightMinus1 ) yp += width;\n                }\n\n                yi = x;\n                stackIn = stackStart;\n\n                for ( y = 0; y < height; y++ ) {\n\n                    p = yi << 2;\n\n                    pixels[p + 3] = pa =(a_sum * mul_sum) >>> shg_sum;\n\n                    if ( pa > 0 ) {\n                        pa = 255 / pa;\n                        pixels[p]   = ((r_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 1] = ((g_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 2] = ((b_sum * mul_sum) >>> shg_sum ) * pa;\n                    } else {\n                        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n                    }\n\n                    p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n\n                    yi += width;\n                }\n            }\n        }\n\n        this.context.putImageData( imageData );\n    }\n});\n\nMartin.registerEffect('invert', function() {\n    this.context.loop(function(x, y, pixel) {\n        pixel.r = 255 - pixel.r;\n        pixel.g = 255 - pixel.g;\n        pixel.b = 255 - pixel.b;\n\n        return pixel;\n    });\n});\n\nvar events = ['click', 'mouseover', 'mousemove', 'mouseenter', 'mouseleave', 'mouseout', 'mousedown', 'mouseup'];\n\nfunction EventCallback(base, cb, type) {\n    return {\n        exec: function exec(e) {\n\n            var eventObj = {}, k;\n\n            for ( k in e ) {\n                eventObj[k] = e[k];\n            }\n\n            eventObj.x = e.offsetX ? e.offsetX : e.clientX - base.canvas.getBoundingClientRect().left;\n            eventObj.y = e.offsetY ? e.offsetY : e.clientY - base.canvas.getBoundingClientRect().top;\n\n            cb(eventObj);\n            base.autorender();\n        }\n    };\n}\n\nevents.forEach(function(evt){\n    Martin.prototype[evt] = function(cb) {\n\n        var callback = EventCallback(this, cb, evt);\n\n        this.canvas.addEventListener(evt, callback.exec);\n        return this;\n    };\n});\n\nMartin.prototype.on = function(evt, cb) {\n\n    evt = evt.split(' ');\n\n    evt.forEach(function(ev) {\n        var callback = EventCallback(this, cb, ev);\n        if ( events.indexOf(ev) > -1 ) {\n            this.canvas.addEventListener(ev, callback.exec);\n        }\n    }, this);\n\n    return this;\n};\n\n/*\n\tNeed to find a place for the rest of these important methods.\n\n\t.width()\n\t.height()\n*/\n\n// Set or change dimensions.\n[ 'width', 'height' ].forEach(function( which ) {\n\n\tMartin.prototype[which] = function( val, resize ) {\n\n\t\t// if no value given, return the corresponding value\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// Update height or width of all the layers' canvases\n\t\t// and update their contexts\n\t\tthis.canvas[which] = val;\n\t\tthis.layers.forEach(function(layer) {\n\t\t\tlayer[which](val, resize);\n\t\t});\n\n\t\treturn this;\n\n\t};\n\n\tMartin.Layer.prototype[which] = function(val, resize) {\n\n\t\tvar ratio;\n\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// normalize the value\n\t\tval = this['normalize' + (which === 'width' ? 'X' : 'Y')](val);\n\n\t\t// resize element canvases\n\t\tMartin.utils.forEach(this.elements, function(element) {\n\t\t\telement.canvas[which] = val;\n\t\t});\n\n\t\t// get the ratio, in case we're resizing\n\t\tratio = resize ? val / this.canvas[which] : 1;\n\n\t\tif ( resize ) {\n\n\t\t\tif ( which === 'width' ) this.scale.x *= ratio;\n\t\t\tif ( which === 'height' ) this.scale.y *= ratio;\n\n\t\t\tthis.canvas[which] = val;\n\t\t}\n\n\t\tthis.base.autorender();\n\n\t\treturn this;\n\t};\n});\n"],"sourceRoot":"/source/"}