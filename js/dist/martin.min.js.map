{"version":3,"sources":["martin.min.js"],"names":["Martin","val","options","this","original","document","getElementById","HTMLElement","makeCanvas","forEach","arr","cb","noop","registerElement","name","attachRender","data","element","Element","renderElement","layer","context","clear","scale","x","y","beginPath","call","setContext","closePath","utils","effects","effect","renderEffect","canvas","width","height","drawImage","prototype","el","autorender","Layer","base","img","rect","normalizeX","normalizeY","registerEffect","stack","stackContainer","Effect","currentLayer","desaturate","amt","loop","pixel","r","g","b","grayscale","lighten","Math","round","BlurStack","a","next","EventCallback","type","exec","e","k","eventObj","offsetX","clientX","getBoundingClientRect","left","offsetY","clientY","top","d","curLayer","stackIndex","naturalWidth","naturalHeight","parentNode","insertBefore","removeChild","image","bumpToBottom","createElement","getContext","newLayer","tagName","complete","onload","bind","_version","degToRad","deg","PI","radToDeg","rad","hexToRGB","hex","slice","length","parseInt","func","funcs","extend","obj","method","hasOwnProperty","Error","remove","parent","render","ctx","clearRect","layers","elements","toDataURL","convertToImage","dataURL","src","i","deleteLayer","container","appendChild","Object","ObjMethods","ObjMethod","put","imageData","pixels","len","n","output","getImageData","floor","putImageData","indexOf","splice","bump","index","bumpUp","bumpDown","bumpToTop","push","unshift","arg","create","normalizePercentX","normalizePercentY","num","caller","percentX","relativePosition","percentY","color","save","fillStyle","fill","globalAlpha","alpha","lineWidth","strokeWidth","lineCap","cap","strokeStyle","stroke","restore","update","arg1","arg2","key","value","moveTo","endX","endY","points","pt","thisX","thisY","lineTo","centerX","centerY","arc","radius","radiusX","radiusY","toX","toY","fontString","style","size","font","fontOutput","clone","fontSize","fontStyle","measureText","text","defineProperty","get","set","textBaseline","textAlign","align","fillText","increase","decrease","mul_shift_table","mul_table","shg_table","isNaN","iterations","widthMinus1","heightMinus1","radiusPlus1","div","mul_sum","shg_sum","it","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","pr","pg","pb","pa","stackEnd","stackIn","stackStart","w","h","buffer","dstData","createImageData","dstBuff","weights","katet","sqrt","half","srcBuff","sy","sx","dstOff","cy","cx","scy","scx","srcOff","wt","events","evt","callback","addEventListener","on","split","ev","which","resize","ratio"],"mappings":"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","file":"martin.min.js","sourcesContent":["/*\n    Martin.js: In-browser photo and image editing\n    Author: Scott Donaldson\n    Contact: scott.p.donaldson@gmail.com\n    Twitter: @scottpdonaldson\n\n    ----------------------------------------\n\n    MARTIN\n*/\n\n(function() {\n\n// The great initializer. Pass in a string to select element by ID,\n// or an HTMLElement\nfunction Martin( val, options ) {\n\n    if ( !(this instanceof Martin) ) return new Martin( val, options );\n\n    // Set the original element, if there is one\n    this.original = null;\n    if ( typeof val === 'string' ) {\n        this.original = document.getElementById(val);\n    } else if ( val instanceof HTMLElement ) {\n        this.original = val;\n    }\n\n    this.options = options || {};\n\n    // Now prepare yourself...\n    return this.makeCanvas();\n\n};\n\nMartin.utils = {};\n\n// Convert an image to a canvas or just return the canvas.\nMartin.prototype.makeCanvas = function() {\n\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // Create an empty layer\n    this.newLayer();\n\n    if ( this.original ) {\n\n        if ( this.original.tagName === 'IMG' ) {\n\n            var canvas = this.canvas,\n                context = this.context,\n                original = this.original;\n\n            function d() {\n\n                // switch to bottom layer\n                var curLayer = this.currentLayer.stackIndex();\n                this.layer(0);\n\n                canvas.width = original.naturalWidth;\n                canvas.height = original.naturalHeight;\n\n                this.width(canvas.width);\n                this.height(canvas.height);\n\n                original.parentNode.insertBefore( canvas, original );\n                original.parentNode.removeChild( original );\n\n                // Give that layer some image data (see src/element/image.js)\n                Martin.registerElement('image', function(img) {\n                    drawImage.call(this, img);\n                });\n\n                this.image(original).bumpToBottom();\n\n                // switch back to previous layer\n                this.layer(curLayer);\n            }\n\n            // This should only fire once! Fire if the image is complete,\n            // or add a handler for once it has finished loading.\n            if ( original.complete ) return d.call(this);\n            original.onload = d.bind(this);\n\n        } else if ( this.original.tagName === 'CANVAS' ) {\n\n            this.canvas = this.original;\n            this.context = this.original.getContext('2d');\n        }\n    }\n\n    // only render and execute callback immediately\n    // if the original is not an image\n    this.autorender();\n\n    return this;\n};\n\nMartin._version = '0.4.2';\n\n/*\n    For helper functions that don't extend Martin prototype.\n\n    degToRad()\n    radToDeg()\n    hexToRGB()\n*/\n\nMartin.degToRad = function(deg) {\n    return deg * ( Math.PI / 180 );\n};\n\nMartin.radToDeg = function(rad) {\n    return rad * ( 180 / Math.PI );\n};\n\nMartin.hexToRGB = function( hex ) {\n\n    if ( !hex ) { return false; }\n\n    if ( hex.slice(0, 1) === '#' ) { hex = hex.slice(1); }\n\n    var r, g, b;\n\n    if ( hex.length === 6 ) {\n\n        r = hex.slice(0, 2);\n        g = hex.slice(2, 4);\n        b = hex.slice(4, 6);\n\n    } else if ( hex.length === 3 ) {\n\n        r = hex.slice(0, 1) + hex.slice(0, 1);\n        g = hex.slice(1, 2) + hex.slice(1, 2);\n        b = hex.slice(2, 3) + hex.slice(2, 3);\n\n    }\n\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16)\n    };\n\n};\n\n/*\n    For (mostly) utility functions that extend Martin prototype.\n\n    extend()\n    .remove()\n    .render()\n    .toDataURL()\n    .convertToImage()\n*/\n\nfunction forEach(arr, cb) {\n    if (arr) {\n        arr.forEach(cb);\n    }\n}\n\nfunction noop() {}\n\nMartin.utils.forEach = forEach;\nMartin.utils.noop = noop;\n\nvar i,\n    func,\n    funcs = {\n\n// Extend Martin with plugins, if you want\nextend: function extend( obj ) {\n    for ( var method in obj ) {\n        if ( Martin.prototype.hasOwnProperty(method) ) {\n            throw new Error('Careful! This method already exists on the Martin prototype. Try a different name after checking the docs: http://martinjs.org');\n        } else {\n            Martin.prototype[method] = obj[method];\n        }\n    }\n},\n\nremove: function remove() {\n    var canvas = this.canvas,\n        parent = canvas.parentNode;\n    if ( parent ) parent.removeChild(this.canvas);\n    return this;\n},\n\n// Render: looping through layers, loop through elements\n// and render each (with optional callback)\nrender: function render(cb) {\n\n    var ctx = this.context;\n\n    ctx.clearRect(0, 0, this.width(), this.height());\n\n    Martin.utils.forEach(this.layers, function(layer) {\n\n        layer.clear();\n\n        Martin.utils.forEach(layer.elements, function renderElement(element) {\n            element.renderElement && element.renderElement();\n        });\n\n        Martin.utils.forEach(layer.effects, function renderEffect(effect) {\n            effect.renderEffect && effect.renderEffect();\n        });\n\n        if ( layer.canvas.width > 0 && layer.canvas.height > 0 ) {\n            ctx.drawImage(layer.canvas, 0, 0);\n        }\n    });\n\n    if (cb) return cb();\n\n    return this;\n},\n\n// Autorender: Only render if the `autorender` option is not false\nautorender: function autorender(cb) {\n    if ( this.options.autorender !== false ) return this.render(cb);\n    return cb ? cb() : null;\n},\n\n// Return's a data URL of all the working layers\ntoDataURL: function toDataURL() {\n    return this.canvas.toDataURL();\n},\n\n// Get the dataURL of the merged layers of the canvas,\n// then turn that into one image\nconvertToImage: function convertToImage() {\n\n    var dataURL = this.toDataURL(),\n        img = document.createElement('img');\n\n    img.src = dataURL;\n\n    this.layers.forEach(function(layer, i){\n        this.deleteLayer(i);\n    }, this);\n\n    if ( this.container ) this.container.appendChild( img );\n\n}\n\n};\n\nfor ( func in funcs ) {\n    Martin.prototype[func] = funcs[func];\n}\n\n// shared methods for objects: layers, elements, effects\n\nMartin.Object = function() {};\nvar ObjMethods,\n    ObjMethod;\n\nObjMethods = {\n\n    loop: function(cb, put) {\n\n        var width = this.base.width(),\n            height = this.base.height();\n\n        var imageData, pixels, len,\n            n, x, y,\n            r, g, b, a,\n            pixel,\n            output;\n\n        imageData = this.getImageData();\n\n        if ( imageData ) {\n\n            pixels = imageData.data;\n            len = pixels.length;\n\n            for ( var i = 0; i < len; i += 4 ) {\n\n                // xy coordinates\n                n = i / 4;\n                x = n % width;\n                y = Math.floor(n / width);\n\n                // rgba values\n                r = pixels[i];\n                g = pixels[i + 1];\n                b = pixels[i + 2];\n                a = pixels[i + 3];\n\n                // pass an object corresponding to the pixel to the callback\n                pixel = { r: r, g: g, b: b, a: a };\n\n                // execute the callback within the context of this layer's, uh... context\n                output = cb.call( this.context, x, y, pixel );\n\n                // reassign the actual rgba values of the pixel based on the output from the loop\n                pixels[i] = output.r;\n                pixels[i + 1] = output.g;\n                pixels[i + 2] = output.b;\n                pixels[i + 3] = output.a;\n\n            }\n\n            // explicitly declare if image data from callback is not to be used\n            if ( put !== false ) this.putImageData( imageData );\n\n        }\n\n        return this;\n    },\n\n    getImageData: function() {\n        var imageData = this.context && this.canvas.width > 0 && this.canvas.height > 0 ?\n            this.context.getImageData(0, 0, this.canvas.width, this.canvas.height) :\n            null;\n        return imageData;\n    },\n\n    // Simple shell for putting image data\n    putImageData: function(imageData) {\n        this.context.putImageData( imageData, 0, 0 );\n        return this;\n    },\n\n    clear: function clear() {\n        this.context.clearRect(0, 0, this.base.width(), this.base.height());\n        return this;\n    },\n\n    stackIndex: function() {\n        return this.stack.indexOf(this);\n    },\n\n    remove: function() {\n        this.stack.splice(this.stackIndex(), 1);\n        this.base.autorender();\n        return this;\n    },\n\n    bump: function(i) {\n        var index = this.stackIndex();\n        this.remove();\n        this.stack.splice(index + i, 0, this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpUp: function() {\n        return this.bump(1);\n    },\n\n    bumpDown: function() {\n        return this.bump(-1);\n    },\n\n    bumpToTop: function() {\n        this.remove();\n        this.stack.push(this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpToBottom: function() {\n        this.remove();\n        this.stack.unshift(this);\n        this.base.autorender();\n        return this;\n    },\n};\n\nfor ( ObjMethod in ObjMethods ) {\n    Martin.Object.prototype[ObjMethod] = ObjMethods[ObjMethod];\n}\n\n/*\n\n    Martin.Layer constructor\n\n    Methods:\n    .normalizeX()\n    .normalizeY()\n    .normalizePercentX()\n    .normalizePercentY()\n    .loop()\n    .setContext()\n    .getImageData()\n    .putImageData()\n    .render()\n    .clear()\n    .remove()\n\n    Methods for working with Layers\n\n    .newLayer()\n    .layer()\n*/\n\n// ----- Layer constructor\nMartin.Layer = function(base, arg) {\n\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n    this.context = this.canvas.getContext('2d');\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.elements = [];\n    this.effects = [];\n\n    // if no layers yet (initializing),\n    // the layers are just this new layer,\n    // and the new layer's context should be the base's\n    if ( !this.base.layers ) {\n        this.base.layers = [];\n    }\n    this.stack = this.base.layers;\n    this.stack.push(this);\n\n    if ( typeof arg === 'string' ) {\n        this.type = arg;\n    } else {\n        for ( var i in arg ) this[i] = arg[i];\n    }\n\n    return this;\n\n};\n\nMartin.Layer.prototype = Object.create(Martin.Object.prototype);\n\n// Normalize X and Y values\nMartin.Layer.prototype.normalizeX = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentX( +val.slice(0, -1) );\n    }\n    return val / this.scale.x;\n};\n\nMartin.Layer.prototype.normalizeY = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentY( +val.slice(0, -1) );\n    }\n    return val / this.scale.y;\n};\n\nMartin.Layer.prototype.normalizePercentX = function( val ) {\n    return ( val / 100 ) * this.canvas.width;\n};\n\nMartin.Layer.prototype.normalizePercentY = function( val ) {\n    return ( val / 100 ) * this.canvas.height;\n};\n\n// Create a new (top-most) layer and switch to that layer.\nMartin.prototype.newLayer = function(arg) {\n\n    var newLayer = new Martin.Layer(this, arg);\n\n    this.currentLayer = newLayer;\n\n    this.autorender();\n\n    return newLayer;\n\n};\n\n// Switch the context and return the requested later\nMartin.prototype.layer = function( num ) {\n\n    this.currentLayer = this.layers[num || 0];\n\n    return this.layers[num || 0];\n\n};\n\n/*\n\n    Martin.Element constructor\n\n    Element methods:\n    .update()\n    .moveTo()\n*/\n\nfunction registerElement(name, cb) {\n\n    function attachRender(data) {\n\n        // create new element\n        var element = new Martin.Element(name, this, data);\n\n        // attach render function (callback) --\n        // execute with element's data\n        element.renderElement = function renderElement() {\n\n            var layer = this.layer,\n                context = this.context;\n\n            // clear any image data\n            this.clear();\n\n            // scale the context\n            context.scale(\n                layer.scale.x,\n                layer.scale.y\n            );\n\n            context.beginPath();\n\n            cb.call(element, this.data);\n\n            this.setContext(this.data);\n\n            context.closePath();\n\n            // undo scaling\n            context.scale(\n                1 / layer.scale.x,\n                1 / layer.scale.y\n            );\n\n            // render this element's effects\n            Martin.utils.forEach(this.effects, function(effect) {\n                effect.renderEffect && effect.renderEffect();\n            });\n\n            // draw to layer\n            if ( this.canvas.width > 0 && this.canvas.height > 0 ) {\n                layer.context.drawImage(this.canvas, 0, 0);\n            }\n        };\n\n        return element;\n    }\n\n    Martin.prototype[name] = function registerToBase(data) {\n        var el = attachRender.call(this, data);\n        this.autorender();\n        return el;\n    };\n\n    Martin.Layer.prototype[name] = function registerToLayer(data) {\n        var el = attachRender.call(this.base, data);\n        this.base.autorender();\n        return el;\n    };\n};\n\nMartin.registerElement = registerElement;\n\nMartin.Element = function(type, caller, data) {\n\n    var base = caller.base || caller,\n        layer = caller.currentLayer || caller;\n\n    // base refers to the instance of Martin\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // TODO: bounding box\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.data = data || {};\n    \n    // if given a percentage x or y position, the element has a relative position --\n    // it should be updated on layer resizing\n    if ( typeof data.x === 'string' || typeof data.y === 'string' ) {\n        var x = data.x || '',\n            y = data.y || '';\n\n        if ( typeof x === 'string' && x.slice(-1) === '%' ) {\n            this.data.percentX = x;\n            this.relativePosition = true;\n        }\n\n        if ( typeof y === 'string' && y.slice(-1) === '%' ) {\n            this.data.percentY = y;\n        }\n    }\n\n    if ( data.x ) this.data.x = layer.normalizeX(data.x);\n    if ( data.y ) this.data.y = layer.normalizeY(data.y);\n\n    this.type = type;\n    this.layer = layer;\n\n    this.effects = [];\n\n    this.stack = this.layer.elements;\n    this.stack.push(this);\n\n    // automatically push backgrounds to the bottom of the layer\n    if ( this.type === 'background' ) {\n        this.data = {\n            color: data\n        };\n        this.bumpToBottom();\n    }\n\n    return this;\n};\n\nMartin.Element.prototype = Object.create(Martin.Object.prototype);\n\n// Set the fill, stroke, alpha for a new shape\nMartin.Element.prototype.setContext = function( obj ) {\n\n    var context = this.context;\n\n    context.save();\n\n    context.fillStyle = obj.color || '#000';\n    context.fill();\n\n    context.scale(\n        this.scale.x,\n        this.scale.y\n    );\n\n    context.globalAlpha = obj.alpha || 1;\n\n    context.lineWidth = obj.strokeWidth ? obj.strokeWidth : 0;\n    context.lineCap = obj.cap ? obj.cap : 'square';\n    context.strokeStyle = obj.stroke ? obj.stroke : 'transparent';\n    context.stroke();\n\n    context.restore();\n\n};\n\n// ----- Update an element with new data\nMartin.Element.prototype.update = function(arg1, arg2) {\n\n    var key, value, data;\n\n    if ( arg2 ) {\n        key = arg1;\n        value = arg2;\n        this.data[key] = value;\n    } else {\n        for ( key in arg1 ) {\n            value = arg1[key];\n            this.data[key] = value;\n        }\n    }\n\n    if ( key === 'x' || key === 'y' ) {\n        this.relativePosition = false;\n    }\n\n    this.base.autorender();\n};\n\n// ----- Move an element to new coordinates\nMartin.Element.prototype.moveTo = function(x, y) {\n\n    var data = this.data;\n\n    // if no params given, move to 0, 0\n    x = x || 0;\n    y = y || 0;\n\n    if ( this.type === 'line' ) {\n        data.endX += x - data.x;\n        data.endY += y - data.y;\n    } else if ( this.type === 'polygon' ) {\n        data.points.forEach(function(pt, i) {\n            if ( i > 0 ) {\n                var thisX = pt[0],\n                    thisY = pt[1];\n                data.points[i] = [\n                    thisX + (x - data.points[0][0]),\n                    thisY + (y - data.points[0][1])\n                ];\n            }\n        });\n        data.points[0] = [x, y];\n    }\n\n    data.x = x;\n    data.y = y;\n\n    this.relativePosition = false;\n\n    this.base.autorender();\n\n    return this;\n\n};\n\nfunction drawImage(img) {\n    this.context.drawImage( img, 0, 0 );\n}\n\nregisterElement('image', function(img) {\n    drawImage.call(this, img);\n});\n\nfunction rect(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.rect(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 ),\n        layer.normalizeX( data.width || layer.width() ),\n        layer.normalizeY( data.height || layer.height() )\n    );\n}\n\nregisterElement('rect', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('background', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('line', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.moveTo(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 )\n    );\n\n    context.lineTo(\n        layer.normalizeX( data.endX ),\n        layer.normalizeY( data.endY )\n    );\n\n    if ( !data.strokeWidth ) data.strokeWidth = 1;\n    data.stroke = data.color ? data.color : '#000';\n\n    return this;\n});\n\nregisterElement('circle', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 );\n\n    context.arc( centerX, centerY, data.radius, 0, 2 * Math.PI, false);\n\n});\n\nregisterElement('ellipse', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 ),\n        scale;\n\n    if ( data.radiusX > data.radiusY ) {\n\n        scale = data.radiusX / data.radiusY;\n\n        context.scale( scale, 1 );\n\n        context.arc( centerX / scale, centerY, data.radiusX / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1 / scale, 1 );\n\n    } else {\n\n        scale = data.radiusY / data.radiusX;\n\n        context.scale( 1, scale );\n\n        context.arc( centerX, centerY / scale, data.radiusY / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1, 1 / scale );\n\n    }\n\n    return this;\n});\n\nregisterElement('polygon', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    for ( var i = 0; i < data.points.length; i++ ) {\n\n        var x = data.points[i][0],\n            y = data.points[i][1],\n            toX = layer.normalizeX( x ),\n            toY = layer.normalizeY( y );\n\n        if ( i === 0 ) context.moveTo( toX, toY );\n\n        context.lineTo( toX, toY );\n\n    }\n\n    // close the path\n    context.lineTo(\n        layer.normalizeX(data.points[0][0]),\n        layer.normalizeY(data.points[0][1])\n    );\n\n    return this;\n});\n\nregisterElement('text', function(data) {\n\n\tvar layer = this.layer,\n        context = this.context,\n\t\tsize,\n        style,\n        font,\n        fontOutput;\n\n    var clone = {};\n\n    // use custom getters and setters for these properties\n    style = data.style || '';\n    size = data.size || '';\n    font = data.font || '';\n\n    function fontString(style, size, font) {\n        return (style ? style + ' ' : '') + (size || 16) + 'px ' + (font || 'sans-serif');\n    };\n\n    fontOutput = fontString(data.style, data.size, data.font);\n\n    this.fontSize = function(size) {\n        if ( size ) {\n            this.data.size = size;\n            return size;\n        } else {\n            return this.data.size;\n        }\n    };\n\n    this.fontStyle = function(style) {\n        if ( style ) {\n            this.data.style = style;\n            return style;\n        }\n\n        return this.data.style;\n    };\n\n    this.font = function(font) {\n        if ( font ) {\n            this.data.font = font;\n            return font;\n        }\n\n        return this.data.style;\n    };\n\n    this.width = function() {\n        return context.measureText(data.text || '').width;\n    };\n\n    Object.defineProperty(clone, 'theStyle', {\n        get: function() {\n            return style;\n        },\n        set: function(style) {\n            fontOutput = fontString(style, data.size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theSize', {\n        get: function() {\n            return size;\n        },\n        set: function(size) {\n            fontOutput = fontString(data.style, size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theFont', {\n        get: function() {\n            return font;\n        },\n        set: function(font) {\n            fontOutput = fontString(data.style, data.size, font);\n        }\n    });\n\n\tcontext.font = fontOutput;\n\tcontext.fillStyle = data.color || '#000';\n\tcontext.textBaseline = 'top';\n\tcontext.textAlign = data.align || 'left';\n\tcontext.fillText(\n\t\tdata.text || '',\n\t\tlayer.normalizeX(data.x || 0),\n\t\tlayer.normalizeY(data.y || 0)\n\t);\n});\n\n/*\n\n    Martin.Effect constructor\n\n    Effect methods:\n    .increase()\n    .decrease()\n*/\n\nfunction registerEffect(name, cb) {\n\n    function attachRender(data, stack, stackContainer) {\n\n        // create new effect\n        var effect = new Martin.Effect(name, this, data, stack, stackContainer);\n\n        // attach render function (callback) --\n        // execute with effect's data\n        effect.renderEffect = function renderEffect() {\n            cb.call(effect, this.data);\n        };\n\n        return effect;\n    }\n\n    Martin.prototype[name] = function attachToBase(data) {\n        var effect = attachRender.call(this, data, this.currentLayer.effects, this.currentLayer);\n        this.autorender();\n        return effect;\n    };\n\n    Martin.Layer.prototype[name] =\n    Martin.Element.prototype[name] = function attachToLayerOrElement(data) {\n        var effect = attachRender.call(this.base, data, this.effects, this);\n        this.base.autorender();\n        return effect;\n    };\n};\n\nMartin.registerEffect = registerEffect;\n\nMartin.Effect = function(type, base, data, stack, stackContainer) {\n\n    this.base = base;\n    this.type = type;\n\n    this.data = data;\n\n    this.context = stackContainer;\n\n    this.stack = stack;\n    this.stack.push(this);\n\n    return this;\n};\n\nMartin.Effect.prototype = Object.create(Martin.Object.prototype);\n\n// Adjust the intensity of an Effect (linear effects only)\nMartin.Effect.prototype.increase = function(amt) {\n\n    if ( typeof this.data === 'number' ) {\n        this.data += amt || 1;\n        this.base.autorender();\n    }\n\n    return this;\n};\n\nMartin.Effect.prototype.decrease = function(amt) {\n    return this.increase(-amt || -1);\n};\n\n// Desaturate\nfunction desaturate(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        var r = pixel.r,\n            g = pixel.g,\n            b = pixel.b;\n\n        var grayscale = r * 0.3 + g * 0.59 + b * 0.11;\n            r = (1 - amt) * r + amt * grayscale;        // red\n            g = (1 - amt) * g + amt * grayscale;        // green\n            b = (1 - amt) * b + amt * grayscale;        // blue\n\n        pixel.r = r;\n        pixel.g = g;\n        pixel.b = b;\n\n        return pixel;\n\n    });\n}\n\nregisterEffect('desaturate', function(amt) {\n    amt = amt / 100;\n    desaturate.call(this, amt);\n});\n\n// inverse of saturate\nregisterEffect('saturate', function(amt) {\n    amt = -amt / 100;\n    desaturate.call(this, amt);\n});\n\n// Lighten and darken. (Darken just returns the opposite of lighten).\n// Takes an input from 0 to 100. Higher values return pure white or black.\nfunction lighten(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        pixel.r += Math.round(amt * 255);\n        pixel.g += Math.round(amt * 255);\n        pixel.b += Math.round(amt * 255);\n\n        return pixel;\n    });\n}\n\nregisterEffect('lighten', function(amt) {\n    amt = amt / 100;\n    lighten.call(this, amt);\n});\n\nregisterEffect('darken', function(amt) {\n    amt = -amt / 100;\n    lighten.call(this, amt);\n});\n\n// Fade uniform\nregisterEffect('opacity', function(amt) {\n\n    amt = amt / 100;\n\n    var base = this.base;\n\n    this.context.loop(function(x, y, pixel) {\n        pixel.a *= amt;\n        return pixel;\n    });\n});\n\n/*\n *\n * StackBlur Algorithm Copyright (c) 2010 Mario Klingemann\n * Version: 0.6\n * Author:\tMario Klingemann\n * Contact: mario@quasimondo.com\n * Website:\thttp://www.quasimondo.com/StackBlurForCanvas\n * Twitter:\t@quasimondo\n *\n */\n\n// simple stack maker\nfunction BlurStack() {\n    this.r = this.g = this.b = this.a = 0;\n    this.next = null;\n}\n\n// helper functions for .blur()\nBlurStack.mul_shift_table = function(i) {\n    var mul_table = [1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265,497,469,443,421,25,191,365,349,335,161,155,149,9,278,269,261,505,245,475,231,449,437,213,415,405,395,193,377,369,361,353,345,169,331,325,319,313,307,301,37,145,285,281,69,271,267,263,259,509,501,493,243,479,118,465,459,113,446,55,435,429,423,209,413,51,403,199,393,97,3,379,375,371,367,363,359,355,351,347,43,85,337,333,165,327,323,5,317,157,311,77,305,303,75,297,294,73,289,287,71,141,279,277,275,68,135,67,133,33,262,260,129,511,507,503,499,495,491,61,121,481,477,237,235,467,232,115,457,227,451,7,445,221,439,218,433,215,427,425,211,419,417,207,411,409,203,202,401,399,396,197,49,389,387,385,383,95,189,47,187,93,185,23,183,91,181,45,179,89,177,11,175,87,173,345,343,341,339,337,21,167,83,331,329,327,163,81,323,321,319,159,79,315,313,39,155,309,307,153,305,303,151,75,299,149,37,295,147,73,291,145,289,287,143,285,71,141,281,35,279,139,69,275,137,273,17,271,135,269,267,133,265,33,263,131,261,130,259,129,257,1];\n\n\n    var shg_table = [0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13,14,14,14,14,10,13,14,14,14,13,13,13,9,14,14,14,15,14,15,14,15,15,14,15,15,15,14,15,15,15,15,15,14,15,15,15,15,15,15,12,14,15,15,13,15,15,15,15,16,16,16,15,16,14,16,16,14,16,13,16,16,16,15,16,13,16,15,16,14,9,16,16,16,16,16,16,16,16,16,13,14,16,16,15,16,16,10,16,15,16,14,16,16,14,16,16,14,16,16,14,15,16,16,16,14,15,14,15,13,16,16,15,17,17,17,17,17,17,14,15,17,17,16,16,17,16,15,17,16,17,11,17,16,17,16,17,16,17,17,16,17,17,16,17,17,16,16,17,17,17,16,14,17,17,17,17,15,16,14,16,15,16,13,16,15,16,14,16,15,16,12,16,15,16,17,17,17,17,17,13,16,15,17,17,17,16,15,17,17,17,16,15,17,17,14,16,17,17,16,17,17,16,15,17,16,14,17,16,15,17,16,17,17,16,17,15,16,17,14,17,16,15,17,16,17,13,17,16,17,17,16,17,14,17,16,17,16,17,16,17,9];\n\n    return [ mul_table[i] || mul_table[mul_table.length - 1], shg_table[i] || shg_table[shg_table.length - 1] ];\n};\n\n// And, what we've all been waiting for:\nregisterEffect('blur', function(amt) {\n\n    if ( isNaN(amt) || amt < 1 ) return this;\n    // Round to nearest pixel\n    amt = Math.round(amt);\n\n    var iterations = 2,\t\t\t// increase for smoother blurring\n        width = this.base.width(),\n        height = this.base.height(),\n        widthMinus1 = width - 1,\n        heightMinus1 = height - 1,\n        radiusPlus1 = amt + 1,\n        div = 2 * amt + 1,\n        mul_sum = BlurStack.mul_shift_table(amt)[0],\n        shg_sum = BlurStack.mul_shift_table(amt)[1];\n\n    var it = iterations, // internal iterations in case doing multiple layers\n        imageData = this.context.getImageData();\n\n    if ( imageData ) {\n        var pixels = imageData.data;\n\n        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n            r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n            pr, pg, pb, pa;\n\n        var stackStart = new BlurStack(),\n            stack = stackStart,\n            stackEnd,\n            stackIn;\n\n        for ( i = 1; i < div; i++ ) {\n            stack = stack.next = new BlurStack();\n            if ( i === radiusPlus1 ) stackEnd = stack;\n        }\n\n        stack.next = stackStart;\n        stackIn = null;\n\n        // repeat for as many iterations as given\n        while ( it-- > 0 ) {\n\n            yw = yi = 0;\n\n            // loop through rows from top down\n            for ( y = height; --y > -1; ) {\n\n                // start summing pixel values\n                r_sum = radiusPlus1 * ( pr = pixels[yi] );\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1] );\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2] );\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3] );\n\n                stack = stackStart;\n\n                for ( i = radiusPlus1; --i > -1; ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n\n                    stack = stack.next;\n                }\n\n                for ( i = 1; i < radiusPlus1; i++ ) {\n\n                    p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\n                    r_sum += ( stack.r = pixels[p]);\n                    g_sum += ( stack.g = pixels[p + 1]);\n                    b_sum += ( stack.b = pixels[p + 2]);\n                    a_sum += ( stack.a = pixels[p + 3]);\n\n                    stack = stack.next;\n                }\n\n                stackIn = stackStart;\n\n                for ( x = 0; x < width; x++ ) {\n                    pixels[yi++] = (r_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (g_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (b_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (a_sum * mul_sum) >>> shg_sum;\n\n                    p = ( yw + ( ( p = x + amt + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n                }\n\n                // next row\n                yw += width;\n            }\n\n            for ( x = 0; x < width; x++ ) {\n\n                // with each column, divide yi by 4 (4 values per px)\n                yi = x << 2;\n\n                r_sum = radiusPlus1 * ( pr = pixels[yi]);\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1]);\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2]);\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3]);\n\n                stack = stackStart;\n\n                for ( i = 0; i < radiusPlus1; i++ ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n                    stack = stack.next;\n                }\n\n                yp = width;\n\n                for ( i = 1; i <= amt; i++ ) {\n                    yi = ( yp + x ) << 2;\n\n                    r_sum += ( stack.r = pixels[yi]);\n                    g_sum += ( stack.g = pixels[yi + 1]);\n                    b_sum += ( stack.b = pixels[yi + 2]);\n                    a_sum += ( stack.a = pixels[yi + 3]);\n\n                    stack = stack.next;\n\n                    if ( i < heightMinus1 ) yp += width;\n                }\n\n                yi = x;\n                stackIn = stackStart;\n\n                for ( y = 0; y < height; y++ ) {\n\n                    p = yi << 2;\n\n                    pixels[p + 3] = pa =(a_sum * mul_sum) >>> shg_sum;\n\n                    if ( pa > 0 ) {\n                        pa = 255 / pa;\n                        pixels[p]   = ((r_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 1] = ((g_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 2] = ((b_sum * mul_sum) >>> shg_sum ) * pa;\n                    } else {\n                        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n                    }\n\n                    p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n\n                    yi += width;\n                }\n            }\n        }\n\n        this.context.putImageData( imageData );\n    }\n});\nMartin.registerEffect('invert', function() {\n    this.context.loop(function(x, y, pixel) {\n        pixel.r = 255 - pixel.r;\n        pixel.g = 255 - pixel.g;\n        pixel.b = 255 - pixel.b;\n\n        return pixel;\n    });\n});\n\nMartin.registerEffect('sharpen', function(amt) {\n\n    if ( isNaN(amt) ) return this;\n\n    var w = this.base.width(),\n        h = this.base.height();\n\n    var buffer = document.createElement('canvas');\n    buffer.width = this.base.width();\n    buffer.height = this.base.height();\n\n    var dstData = buffer.getContext('2d').createImageData(w, h),\n        dstBuff = dstData.data;\n    \n    var weights = [0, -1, 0, -1, 5, -1, 0, -1, 0],\n        katet = Math.round(Math.sqrt(weights.length)),\n        half = (katet * 0.5) | 0,\n        srcBuff = this.context.getImageData(0, 0, w, h).data,\n        y = h;\n\n    amt /= 100;\n\n    while (y--) {\n\n        x = w;\n\n        while (x--) {\n\n            var sy = y,\n                sx = x,\n                dstOff = (y * w + x) * 4,\n                r = 0,\n                g = 0,\n                b = 0,\n                a = 0;\n\n            for (var cy = 0; cy < katet; cy++) {\n                for (var cx = 0; cx < katet; cx++) {\n\n                    var scy = sy + cy - half;\n                    var scx = sx + cx - half;\n\n                    if (scy >= 0 && scy < h && scx >= 0 && scx < w) {\n\n                        var srcOff = (scy * w + scx) * 4;\n                        var wt = weights[cy * katet + cx];\n\n                        r += srcBuff[srcOff] * wt;\n                        g += srcBuff[srcOff + 1] * wt;\n                        b += srcBuff[srcOff + 2] * wt;\n                        a += srcBuff[srcOff + 3] * wt;\n                    }\n                }\n            }\n\n            dstBuff[dstOff]     = r * amt + srcBuff[dstOff] * (1 - amt);\n            dstBuff[dstOff + 1] = g * amt + srcBuff[dstOff + 1] * (1 - amt);\n            dstBuff[dstOff + 2] = b * amt + srcBuff[dstOff + 2] * (1 - amt)\n            dstBuff[dstOff + 3] = srcBuff[dstOff + 3];\n        }\n    }\n\n    this.context.putImageData(dstData);\n});\nvar events = ['click', 'mouseover', 'mousemove', 'mouseenter', 'mouseleave', 'mouseout', 'mousedown', 'mouseup'];\n\nfunction EventCallback(base, cb, type) {\n    return {\n        exec: function exec(e) {\n\n            var eventObj = {}, k;\n\n            for ( k in e ) {\n                eventObj[k] = e[k];\n            }\n\n            eventObj.x = e.offsetX ? e.offsetX : e.clientX - base.canvas.getBoundingClientRect().left;\n            eventObj.y = e.offsetY ? e.offsetY : e.clientY - base.canvas.getBoundingClientRect().top;\n\n            cb(eventObj);\n            base.autorender();\n        }\n    };\n}\n\nevents.forEach(function(evt){\n    Martin.prototype[evt] = function(cb) {\n\n        var callback = EventCallback(this, cb, evt);\n\n        this.canvas.addEventListener(evt, callback.exec);\n        return this;\n    };\n});\n\nMartin.prototype.on = function(evt, cb) {\n\n    evt = evt.split(' ');\n\n    evt.forEach(function(ev) {\n        var callback = EventCallback(this, cb, ev);\n        if ( events.indexOf(ev) > -1 ) {\n            this.canvas.addEventListener(ev, callback.exec);\n        }\n    }, this);\n\n    return this;\n};\n\n/*\n\tNeed to find a place for the rest of these important methods.\n\n\t.width()\n\t.height()\n*/\n\n// Set or change dimensions.\n[ 'width', 'height' ].forEach(function( which ) {\n\n\tMartin.prototype[which] = function( val, resize ) {\n\n\t\t// if no value given, return the corresponding value\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// Update height or width of all the layers' canvases\n\t\t// and update their contexts\n\t\tthis.canvas[which] = val;\n\t\tthis.layers.forEach(function(layer) {\n\t\t\tlayer[which](val, resize);\n\t\t});\n\n\t\treturn this;\n\n\t};\n\n\tMartin.Layer.prototype[which] = function(val, resize) {\n\n\t\tvar layer = this,\n\t\t\tratio;\n\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// normalize the value\n\t\tval = this['normalize' + (which === 'width' ? 'X' : 'Y')](val);\n\n\t\t// resize this layer's canvas\n\t\tthis.canvas[which] = val;\n\n\t\t// resize element canvases\n\t\tMartin.utils.forEach(this.elements, function(element) {\n\t\t\telement.canvas[which] = val;\n\n\t\t\t// if relatively positioned, reposition\n\t\t\tif ( element.relativePosition ) {\n\t\t\t\tif ( element.data.percentX ) {\n\t\t\t\t\telement.data.x = layer.normalizeX(element.data.percentX);\n\t\t\t\t}\n\t\t\t\tif ( element.data.percentY ) {\n\t\t\t\t\telement.data.y = layer.normalizeY(element.data.percentY);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// get the ratio, in case we're resizing\n\t\tratio = resize ? val / this.canvas[which] : 1;\n\n\t\tif ( resize ) {\n\n\t\t\tif ( which === 'width' ) this.scale.x *= ratio;\n\t\t\tif ( which === 'height' ) this.scale.y *= ratio;\n\n\t\t\tthis.canvas[which] = val;\n\t\t}\n\n\t\tthis.base.autorender();\n\n\t\treturn this;\n\t};\n});\n\nthis.Martin = Martin;\n\n})();\n"],"sourceRoot":"/source/"}