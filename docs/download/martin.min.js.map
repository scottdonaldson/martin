{"version":3,"sources":["martin.min.js"],"names":["Martin","val","options","this","original","document","getElementById","HTMLElement","makeCanvas","forEach","arr","cb","noop","registerElement","name","attachRender","data","element","Element","renderElement","layer","context","clear","scale","x","y","beginPath","call","setContext","closePath","utils","effects","effect","renderEffect","drawImage","canvas","prototype","el","autorender","Layer","base","img","rect","normalizeX","normalizeY","width","height","registerEffect","stack","stackContainer","Effect","currentLayer","desaturate","amt","loop","pixel","r","g","b","grayscale","lighten","Math","round","BlurStack","a","next","EventCallback","type","exec","e","k","eventObj","offsetX","clientX","getBoundingClientRect","left","offsetY","clientY","top","d","naturalWidth","naturalHeight","parentNode","insertBefore","removeChild","image","createElement","getContext","newLayer","tagName","complete","onload","bind","_version","degToRad","deg","PI","radToDeg","rad","hexToRGB","hex","slice","length","parseInt","func","funcs","extend","obj","method","hasOwnProperty","Error","remove","parent","render","ctx","clearRect","layers","elements","toDataURL","convertToImage","dataURL","src","i","deleteLayer","container","appendChild","Object","ObjMethods","ObjMethod","put","imageData","pixels","len","n","output","getImageData","floor","putImageData","stackIndex","indexOf","splice","bump","index","bumpUp","bumpDown","bumpToTop","push","bumpToBottom","unshift","arg","create","normalizePercentX","normalizePercentY","num","caller","color","save","fillStyle","fill","globalAlpha","alpha","lineWidth","strokeWidth","lineCap","cap","strokeStyle","stroke","restore","update","arg1","arg2","key","value","moveTo","endX","endY","points","pt","thisX","thisY","lineTo","centerX","centerY","arc","radius","radiusX","radiusY","toX","toY","fontString","style","size","font","fontOutput","clone","fontSize","fontStyle","measureText","text","defineProperty","get","set","textBaseline","textAlign","align","fillText","increase","decrease","mul_shift_table","mul_table","shg_table","isNaN","iterations","widthMinus1","heightMinus1","radiusPlus1","div","mul_sum","shg_sum","it","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","pr","pg","pb","pa","stackEnd","stackIn","stackStart","events","evt","callback","addEventListener","on","split","ev","which","resize","ratio"],"mappings":"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","file":"martin.min.js","sourcesContent":["/*\n    Martin.js: In-browser photo and image editing\n    Author: Scott Donaldson\n    Contact: scott.p.donaldson@gmail.com\n    Twitter: @scottpdonaldson\n\n    ----------------------------------------\n\n    MARTIN\n*/\n\n(function() {\n\n// The great initializer. Pass in a string to select element by ID,\n// or an HTMLElement\nfunction Martin( val, options ) {\n\n    if ( !(this instanceof Martin) ) return new Martin( val, options );\n\n    // Set the original element, if there is one\n    this.original = null;\n    if ( typeof val === 'string' ) {\n        this.original = document.getElementById(val);\n    } else if ( val instanceof HTMLElement ) {\n        this.original = val;\n    }\n\n    this.options = options || {};\n\n    // Now prepare yourself...\n    return this.makeCanvas();\n\n};\n\nMartin.utils = {};\n\n// Convert an image to a canvas or just return the canvas.\nMartin.prototype.makeCanvas = function() {\n\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // Create an empty layer\n    this.newLayer();\n\n    if ( this.original ) {\n\n        if ( this.original.tagName === 'IMG' ) {\n\n            var canvas = this.canvas,\n                context = this.context,\n                original = this.original;\n\n            function d() {\n\n                canvas.width = original.naturalWidth;\n                canvas.height = original.naturalHeight;\n\n                this.width(canvas.width);\n                this.height(canvas.height);\n\n                original.parentNode.insertBefore( canvas, original );\n                original.parentNode.removeChild( original );\n\n                // Give that layer some image data (see src/element/image.js)\n                Martin.registerElement('image', function(img) {\n                    drawImage.call(this, img);\n                });\n\n                this.image(original);\n            }\n\n            // This should only fire once! Fire if the image is complete,\n            // or add a handler for once it has finished loading.\n            if ( original.complete ) return d.call(this);\n            original.onload = d.bind(this);\n\n        } else if ( this.original.tagName === 'CANVAS' ) {\n\n            this.canvas = this.original;\n            this.context = this.original.getContext('2d');\n        }\n    }\n\n    // only render and execute callback immediately\n    // if the original is not an image\n    this.autorender();\n\n    return this;\n};\n\nMartin._version = '0.3.3';\n\n/*\n    For helper functions that don't extend Martin prototype.\n\n    degToRad()\n    radToDeg()\n    hexToRGB()\n*/\n\nMartin.degToRad = function(deg) {\n    return deg * ( Math.PI / 180 );\n};\n\nMartin.radToDeg = function(rad) {\n    return rad * ( 180 / Math.PI );\n};\n\nMartin.hexToRGB = function( hex ) {\n\n    if ( !hex ) { return false; }\n\n    if ( hex.slice(0, 1) === '#' ) { hex = hex.slice(1); }\n\n    var r, g, b;\n\n    if ( hex.length === 6 ) {\n\n        r = hex.slice(0, 2);\n        g = hex.slice(2, 4);\n        b = hex.slice(4, 6);\n\n    } else if ( hex.length === 3 ) {\n\n        r = hex.slice(0, 1) + hex.slice(0, 1);\n        g = hex.slice(1, 2) + hex.slice(1, 2);\n        b = hex.slice(2, 3) + hex.slice(2, 3);\n\n    }\n\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16)\n    };\n\n};\n\n/*\n    For (mostly) utility functions that extend Martin prototype.\n\n    extend()\n    .remove()\n    .render()\n    .toDataURL()\n    .convertToImage()\n*/\n\nfunction forEach(arr, cb) {\n    if (arr) {\n        arr.forEach(cb);\n    }\n}\n\nfunction noop() {}\n\nMartin.utils.forEach = forEach;\nMartin.utils.noop = noop;\n\nvar i,\n    func,\n    funcs = {\n\n// Extend Martin with plugins, if you want\nextend: function extend( obj ) {\n    for ( var method in obj ) {\n        if ( Martin.prototype.hasOwnProperty(method) ) {\n            throw new Error('Careful! This method already exists on the Martin prototype. Try a different name after checking the docs: http://martinjs.org');\n        } else {\n            Martin.prototype[method] = obj[method];\n        }\n    }\n},\n\nremove: function remove() {\n    var canvas = this.canvas,\n        parent = canvas.parentNode;\n    if ( parent ) parent.removeChild(this.canvas);\n    return this;\n},\n\n// Render: looping through layers, loop through elements\n// and render each (with optional callback)\nrender: function render(cb) {\n\n    var ctx = this.context;\n\n    ctx.clearRect(0, 0, this.width(), this.height());\n\n    Martin.utils.forEach(this.layers, function(layer) {\n\n        layer.clear();\n\n        Martin.utils.forEach(layer.elements, function renderElement(element) {\n            element.renderElement && element.renderElement();\n        });\n\n        Martin.utils.forEach(layer.effects, function renderEffect(effect) {\n            effect.renderEffect && effect.renderEffect();\n        });\n\n        ctx.drawImage(layer.canvas, 0, 0);\n    });\n\n    if (cb) return cb();\n\n    return this;\n},\n\n// Autorender: Only render if the `autorender` option is not false\nautorender: function autorender(cb) {\n    if ( this.options.autorender !== false ) return this.render(cb);\n    return cb ? cb() : null;\n},\n\n// Return's a data URL of all the working layers\ntoDataURL: function toDataURL() {\n    return this.canvas.toDataURL();\n},\n\n// Get the dataURL of the merged layers of the canvas,\n// then turn that into one image\nconvertToImage: function convertToImage() {\n\n    var dataURL = this.toDataURL(),\n        img = document.createElement('img');\n\n    img.src = dataURL;\n\n    this.layers.forEach(function(layer, i){\n        this.deleteLayer(i);\n    }, this);\n\n    if ( this.container ) this.container.appendChild( img );\n\n}\n\n};\n\nfor ( func in funcs ) {\n    Martin.prototype[func] = funcs[func];\n}\n\n// shared methods for objects: layers, elements, effects\n\nMartin.Object = function() {};\nvar ObjMethods,\n    ObjMethod;\n\nObjMethods = {\n\n    loop: function(cb, put) {\n\n        var width = this.base.width(),\n            height = this.base.height();\n\n        var imageData, pixels, len,\n            n, x, y,\n            r, g, b, a,\n            pixel,\n            output;\n\n        imageData = this.getImageData();\n\n        if ( imageData ) {\n\n            pixels = imageData.data;\n            len = pixels.length;\n\n            for ( var i = 0; i < len; i += 4 ) {\n\n                // xy coordinates\n                n = i / 4;\n                x = n % width;\n                y = Math.floor(n / width);\n\n                // rgba values\n                r = pixels[i];\n                g = pixels[i + 1];\n                b = pixels[i + 2];\n                a = pixels[i + 3];\n\n                // pass an object corresponding to the pixel to the callback\n                pixel = { r: r, g: g, b: b, a: a };\n\n                // execute the callback within the context of this layer's, uh... context\n                output = cb.call( this.context, x, y, pixel );\n\n                // reassign the actual rgba values of the pixel based on the output from the loop\n                pixels[i] = output.r;\n                pixels[i + 1] = output.g;\n                pixels[i + 2] = output.b;\n                pixels[i + 3] = output.a;\n\n            }\n\n            // explicitly declare if image data from callback is not to be used\n            if ( put !== false ) this.putImageData( imageData );\n\n        }\n\n        return this;\n    },\n\n    getImageData: function() {\n        var imageData = this.context && this.canvas.width > 0 && this.canvas.height > 0 ?\n            this.context.getImageData(0, 0, this.canvas.width, this.canvas.height) :\n            null;\n        return imageData;\n    },\n\n    // Simple shell for putting image data\n    putImageData: function(imageData) {\n        this.context.putImageData( imageData, 0, 0 );\n        return this;\n    },\n\n    clear: function clear() {\n        this.context.clearRect(0, 0, this.base.width(), this.base.height());\n        return this;\n    },\n\n    stackIndex: function() {\n        return this.stack.indexOf(this);\n    },\n\n    remove: function() {\n        this.stack.splice(this.stackIndex(), 1);\n        this.base.autorender();\n        return this;\n    },\n\n    bump: function(i) {\n        var index = this.stackIndex();\n        this.remove();\n        this.stack.splice(index + i, 0, this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpUp: function() {\n        return this.bump(1);\n    },\n\n    bumpDown: function() {\n        return this.bump(-1);\n    },\n\n    bumpToTop: function() {\n        this.remove();\n        this.stack.push(this);\n        this.base.autorender();\n        return this;\n    },\n\n    bumpToBottom: function() {\n        this.remove();\n        this.stack.unshift(this);\n        this.base.autorender();\n        return this;\n    },\n};\n\nfor ( ObjMethod in ObjMethods ) {\n    Martin.Object.prototype[ObjMethod] = ObjMethods[ObjMethod];\n}\n\n/*\n\n    Martin.Layer constructor\n\n    Methods:\n    .normalizeX()\n    .normalizeY()\n    .normalizePercentX()\n    .normalizePercentY()\n    .loop()\n    .setContext()\n    .getImageData()\n    .putImageData()\n    .render()\n    .clear()\n    .remove()\n\n    Methods for working with Layers\n\n    .newLayer()\n    .layer()\n*/\n\n// ----- Layer constructor\nMartin.Layer = function(base, arg) {\n\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n    this.context = this.canvas.getContext('2d');\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.elements = [];\n    this.effects = [];\n\n    // if no layers yet (initializing),\n    // the layers are just this new layer,\n    // and the new layer's context should be the base's\n    if ( !this.base.layers ) {\n        this.base.layers = [];\n    }\n    this.stack = this.base.layers;\n    this.stack.push(this);\n\n    if ( typeof arg === 'string' ) {\n        this.type = arg;\n    } else {\n        for ( var i in arg ) this[i] = arg[i];\n    }\n\n    return this;\n\n};\n\nMartin.Layer.prototype = Object.create(Martin.Object.prototype);\n\n// Normalize X and Y values\nMartin.Layer.prototype.normalizeX = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentX( +val.slice(0, -1) );\n    }\n    return val / this.scale.x;\n};\n\nMartin.Layer.prototype.normalizeY = function( val ) {\n    if ( typeof val === 'string' && val.slice(-1) === '%' ) {\n        val = this.normalizePercentY( +val.slice(0, -1) );\n    }\n    return val / this.scale.y;\n};\n\nMartin.Layer.prototype.normalizePercentX = function( val ) {\n    return ( val / 100 ) * this.canvas.width;\n};\n\nMartin.Layer.prototype.normalizePercentY = function( val ) {\n    return ( val / 100 ) * this.canvas.height;\n};\n\n// Create a new (top-most) layer and switch to that layer.\nMartin.prototype.newLayer = function(arg) {\n\n    var newLayer = new Martin.Layer(this, arg);\n\n    this.currentLayer = newLayer;\n\n    this.autorender();\n\n    return newLayer;\n\n};\n\n// Switch the context and return the requested later\nMartin.prototype.layer = function( num ) {\n\n    this.currentLayer = this.layers[num || 0];\n\n    return this.layers[num || 0];\n\n};\n\n/*\n\n    Martin.Element constructor\n\n    Element methods:\n    .update()\n    .moveTo()\n*/\n\nfunction registerElement(name, cb) {\n\n    function attachRender(data) {\n\n        // create new element\n        var element = new Martin.Element(name, this, data);\n\n        // attach render function (callback) --\n        // execute with element's data\n        element.renderElement = function renderElement() {\n\n            var layer = this.layer,\n                context = this.context;\n\n            // clear any image data\n            this.clear();\n\n            // scale the context\n            context.scale(\n                layer.scale.x,\n                layer.scale.y\n            );\n\n            context.beginPath();\n\n            cb.call(element, this.data);\n\n            this.setContext(this.data);\n\n            context.closePath();\n\n            // undo scaling\n            context.scale(\n                1 / layer.scale.x,\n                1 / layer.scale.y\n            );\n\n            // render this element's effects\n            Martin.utils.forEach(this.effects, function(effect) {\n                effect.renderEffect && effect.renderEffect();\n            });\n\n            // draw to layer\n            layer.context.drawImage(this.canvas, 0, 0);\n        };\n\n        return element;\n    }\n\n    Martin.prototype[name] = function registerToBase(data) {\n        var el = attachRender.call(this, data);\n        this.autorender();\n        return el;\n    };\n\n    Martin.Layer.prototype[name] = function registerToLayer(data) {\n        var el = attachRender.call(this.base, data);\n        this.base.autorender();\n        return el;\n    };\n};\n\nMartin.registerElement = registerElement;\n\nMartin.Element = function(type, caller, data) {\n\n    var base = caller.base || caller,\n        layer = caller.currentLayer || caller;\n\n    // base refers to the instance of Martin\n    this.base = base;\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n\n    // TODO: bounding box\n    this.canvas.width = base.original ? (base.original.naturalWidth || base.original.width) : base.width();\n    this.canvas.height = base.original ? (base.original.naturalHeight || base.original.height) : base.height();\n\n    this.scale = {\n        x: 1,\n        y: 1\n    };\n\n    this.data = data || {};\n    if ( data.x ) this.data.x = layer.normalizeX(data.x);\n    if ( data.y ) this.data.y = layer.normalizeY(data.y);\n    this.type = type;\n    this.layer = layer;\n\n    this.effects = [];\n\n    this.stack = this.layer.elements;\n    this.stack.push(this);\n\n    // automatically push backgrounds to the bottom of the layer\n    if ( this.type === 'background' ) {\n        this.data = {\n            color: data\n        };\n        this.bumpToBottom();\n    }\n\n    return this;\n};\n\nMartin.Element.prototype = Object.create(Martin.Object.prototype);\n\n// Set the fill, stroke, alpha for a new shape\nMartin.Element.prototype.setContext = function( obj ) {\n\n    var context = this.context;\n\n    context.save();\n\n    context.fillStyle = obj.color || '#000';\n    context.fill();\n\n    context.scale(\n        this.scale.x,\n        this.scale.y\n    );\n\n    context.globalAlpha = obj.alpha || 1;\n\n    context.lineWidth = obj.strokeWidth ? obj.strokeWidth : 0;\n    context.lineCap = obj.cap ? obj.cap : 'square';\n    context.strokeStyle = obj.stroke ? obj.stroke : 'transparent';\n    context.stroke();\n\n    context.restore();\n\n};\n\n// ----- Update an element with new data\nMartin.Element.prototype.update = function(arg1, arg2) {\n\n    var key, value, data;\n\n    if ( arg2 ) {\n        key = arg1;\n        value = arg2;\n        this.data[key] = value;\n    } else {\n        for ( key in arg1 ) {\n            value = arg1[key];\n            this.data[key] = value;\n        }\n    }\n\n    this.base.autorender();\n};\n\n// ----- Move an element to new coordinates\nMartin.Element.prototype.moveTo = function(x, y) {\n\n    var data = this.data;\n\n    // if no params given, move to 0, 0\n    x = x || 0;\n    y = y || 0;\n\n    if ( this.type === 'line' ) {\n        data.endX += x - data.x;\n        data.endY += y - data.y;\n    } else if ( this.type === 'polygon' ) {\n        data.points.forEach(function(pt, i) {\n            if ( i > 0 ) {\n                var thisX = pt[0],\n                    thisY = pt[1];\n                data.points[i] = [\n                    thisX + (x - data.points[0][0]),\n                    thisY + (y - data.points[0][1])\n                ];\n            }\n        });\n        data.points[0] = [x, y];\n    }\n\n    data.x = x;\n    data.y = y;\n\n    this.base.autorender();\n\n    return this;\n\n};\n\nfunction drawImage(img) {\n    this.context.drawImage( img, 0, 0 );\n}\n\nregisterElement('image', function(img) {\n    drawImage.call(this, img);\n});\n\nfunction rect(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.rect(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 ),\n        layer.normalizeX( data.width || layer.width() ),\n        layer.normalizeY( data.height || layer.height() )\n    );\n}\n\nregisterElement('rect', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('background', function(data) {\n    rect.call(this, data);\n});\n\nregisterElement('line', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    context.moveTo(\n        layer.normalizeX( data.x || 0 ),\n        layer.normalizeY( data.y || 0 )\n    );\n\n    context.lineTo(\n        layer.normalizeX( data.endX ),\n        layer.normalizeY( data.endY )\n    );\n\n    if ( !data.strokeWidth ) data.strokeWidth = 1;\n    data.stroke = data.color ? data.color : '#000';\n\n    return this;\n});\n\nregisterElement('circle', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 );\n\n    context.arc( centerX, centerY, data.radius, 0, 2 * Math.PI, false);\n\n});\n\nregisterElement('ellipse', function(data) {\n\n    var layer = this.layer,\n        context = this.context,\n        centerX = layer.normalizeX( data.x || 0 ),\n        centerY = layer.normalizeY( data.y || 0 ),\n        scale;\n\n    if ( data.radiusX > data.radiusY ) {\n\n        scale = data.radiusX / data.radiusY;\n\n        context.scale( scale, 1 );\n\n        context.arc( centerX / scale, centerY, data.radiusX / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1 / scale, 1 );\n\n    } else {\n\n        scale = data.radiusY / data.radiusX;\n\n        context.scale( 1, scale );\n\n        context.arc( centerX, centerY / scale, data.radiusY / scale, 0, 2 * Math.PI, false);\n\n        context.scale( 1, 1 / scale );\n\n    }\n\n    return this;\n});\n\nregisterElement('polygon', function(data) {\n\n    var layer = this.layer,\n        context = this.context;\n\n    for ( var i = 0; i < data.points.length; i++ ) {\n\n        var x = data.points[i][0],\n            y = data.points[i][1],\n            toX = layer.normalizeX( x ),\n            toY = layer.normalizeY( y );\n\n        if ( i === 0 ) context.moveTo( toX, toY );\n\n        context.lineTo( toX, toY );\n\n    }\n\n    // close the path\n    context.lineTo(\n        layer.normalizeX(data.points[0][0]),\n        layer.normalizeY(data.points[0][1])\n    );\n\n    return this;\n});\n\nregisterElement('text', function(data) {\n\n\tvar layer = this.layer,\n        context = this.context,\n\t\tsize,\n        style,\n        font,\n        fontOutput;\n\n    var clone = {};\n\n    // use custom getters and setters for these properties\n    style = data.style || '';\n    size = data.size || '';\n    font = data.font || '';\n\n    function fontString(style, size, font) {\n        return (style ? style + ' ' : '') + (size || 16) + 'px ' + (font || 'sans-serif');\n    };\n\n    fontOutput = fontString(data.style, data.size, data.font);\n\n    this.fontSize = function(size) {\n        if ( size ) {\n            this.data.size = size;\n            return size;\n        } else {\n            return this.data.size;\n        }\n    };\n\n    this.fontStyle = function(style) {\n        if ( style ) {\n            this.data.style = style;\n            return style;\n        }\n\n        return this.data.style;\n    };\n\n    this.font = function(font) {\n        if ( font ) {\n            this.data.font = font;\n            return font;\n        }\n\n        return this.data.style;\n    };\n\n    this.width = function() {\n        return context.measureText(data.text || '').width;\n    };\n\n    Object.defineProperty(clone, 'theStyle', {\n        get: function() {\n            return style;\n        },\n        set: function(style) {\n            fontOutput = fontString(style, data.size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theSize', {\n        get: function() {\n            return size;\n        },\n        set: function(size) {\n            fontOutput = fontString(data.style, size, data.font);\n        }\n    });\n\n    Object.defineProperty(clone, 'theFont', {\n        get: function() {\n            return font;\n        },\n        set: function(font) {\n            fontOutput = fontString(data.style, data.size, font);\n        }\n    });\n\n\tcontext.font = fontOutput;\n\tcontext.fillStyle = data.color || '#000';\n\tcontext.textBaseline = 'top';\n\tcontext.textAlign = data.align || 'left';\n\tcontext.fillText(\n\t\tdata.text || '',\n\t\tlayer.normalizeX(data.x || 0),\n\t\tlayer.normalizeY(data.y || 0)\n\t);\n});\n\n/*\n\n    Martin.Effect constructor\n\n    Effect methods:\n    .increase()\n    .decrease()\n*/\n\nfunction registerEffect(name, cb) {\n\n    function attachRender(data, stack, stackContainer) {\n\n        // create new effect\n        var effect = new Martin.Effect(name, this, data, stack, stackContainer);\n\n        // attach render function (callback) --\n        // execute with effect's data\n        effect.renderEffect = function renderEffect() {\n            cb.call(effect, this.data);\n        };\n\n        return effect;\n    }\n\n    Martin.prototype[name] = function attachToBase(data) {\n        var effect = attachRender.call(this, data, this.currentLayer.effects, this.currentLayer);\n        this.autorender();\n        return effect;\n    };\n\n    Martin.Layer.prototype[name] =\n    Martin.Element.prototype[name] = function attachToLayerOrElement(data) {\n        var effect = attachRender.call(this.base, data, this.effects, this);\n        this.base.autorender();\n        return effect;\n    };\n};\n\nMartin.registerEffect = registerEffect;\n\nMartin.Effect = function(type, base, data, stack, stackContainer) {\n\n    this.base = base;\n    this.type = type;\n\n    this.data = data;\n\n    this.context = stackContainer;\n\n    this.stack = stack;\n    this.stack.push(this);\n\n    return this;\n};\n\nMartin.Effect.prototype = Object.create(Martin.Object.prototype);\n\n// Adjust the intensity of an Effect (linear effects only)\nMartin.Effect.prototype.increase = function(amt) {\n\n    if ( typeof this.data === 'number' ) {\n        this.data += amt || 1;\n        this.base.autorender();\n    }\n\n    return this;\n};\n\nMartin.Effect.prototype.decrease = function(amt) {\n    return this.increase(-amt || -1);\n};\n\n// Desaturate\nfunction desaturate(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        var r = pixel.r,\n            g = pixel.g,\n            b = pixel.b;\n\n        var grayscale = r * 0.3 + g * 0.59 + b * 0.11;\n            r = (1 - amt) * r + amt * grayscale;        // red\n            g = (1 - amt) * g + amt * grayscale;        // green\n            b = (1 - amt) * b + amt * grayscale;        // blue\n\n        pixel.r = r;\n        pixel.g = g;\n        pixel.b = b;\n\n        return pixel;\n\n    });\n}\n\nregisterEffect('desaturate', function(amt) {\n    amt = amt / 100;\n    desaturate.call(this, amt);\n});\n\n// inverse of saturate\nregisterEffect('saturate', function(amt) {\n    amt = -amt / 100;\n    desaturate.call(this, amt);\n});\n\n// Lighten and darken. (Darken just returns the opposite of lighten).\n// Takes an input from 0 to 100. Higher values return pure white or black.\nfunction lighten(amt) {\n\n    this.context.loop(function(x, y, pixel) {\n\n        pixel.r += Math.round(amt * 255);\n        pixel.g += Math.round(amt * 255);\n        pixel.b += Math.round(amt * 255);\n\n        return pixel;\n    });\n}\n\nregisterEffect('lighten', function(amt) {\n    amt = amt / 100;\n    lighten.call(this, amt);\n});\n\nregisterEffect('darken', function(amt) {\n    amt = -amt / 100;\n    lighten.call(this, amt);\n});\n\n// Fade uniform\nregisterEffect('opacity', function(amt) {\n\n    amt = amt / 100;\n\n    var base = this.base;\n\n    this.context.loop(function(x, y, pixel) {\n        pixel.a *= amt;\n        return pixel;\n    });\n});\n\n/*\n *\n * StackBlur Algorithm Copyright (c) 2010 Mario Klingemann\n * Version: 0.6\n * Author:\tMario Klingemann\n * Contact: mario@quasimondo.com\n * Website:\thttp://www.quasimondo.com/StackBlurForCanvas\n * Twitter:\t@quasimondo\n *\n */\n\n// simple stack maker\nfunction BlurStack() {\n    this.r = this.g = this.b = this.a = 0;\n    this.next = null;\n}\n\n// helper functions for .blur()\nBlurStack.mul_shift_table = function(i) {\n    var mul_table = [1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265,497,469,443,421,25,191,365,349,335,161,155,149,9,278,269,261,505,245,475,231,449,437,213,415,405,395,193,377,369,361,353,345,169,331,325,319,313,307,301,37,145,285,281,69,271,267,263,259,509,501,493,243,479,118,465,459,113,446,55,435,429,423,209,413,51,403,199,393,97,3,379,375,371,367,363,359,355,351,347,43,85,337,333,165,327,323,5,317,157,311,77,305,303,75,297,294,73,289,287,71,141,279,277,275,68,135,67,133,33,262,260,129,511,507,503,499,495,491,61,121,481,477,237,235,467,232,115,457,227,451,7,445,221,439,218,433,215,427,425,211,419,417,207,411,409,203,202,401,399,396,197,49,389,387,385,383,95,189,47,187,93,185,23,183,91,181,45,179,89,177,11,175,87,173,345,343,341,339,337,21,167,83,331,329,327,163,81,323,321,319,159,79,315,313,39,155,309,307,153,305,303,151,75,299,149,37,295,147,73,291,145,289,287,143,285,71,141,281,35,279,139,69,275,137,273,17,271,135,269,267,133,265,33,263,131,261,130,259,129,257,1];\n\n\n    var shg_table = [0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13,14,14,14,14,10,13,14,14,14,13,13,13,9,14,14,14,15,14,15,14,15,15,14,15,15,15,14,15,15,15,15,15,14,15,15,15,15,15,15,12,14,15,15,13,15,15,15,15,16,16,16,15,16,14,16,16,14,16,13,16,16,16,15,16,13,16,15,16,14,9,16,16,16,16,16,16,16,16,16,13,14,16,16,15,16,16,10,16,15,16,14,16,16,14,16,16,14,16,16,14,15,16,16,16,14,15,14,15,13,16,16,15,17,17,17,17,17,17,14,15,17,17,16,16,17,16,15,17,16,17,11,17,16,17,16,17,16,17,17,16,17,17,16,17,17,16,16,17,17,17,16,14,17,17,17,17,15,16,14,16,15,16,13,16,15,16,14,16,15,16,12,16,15,16,17,17,17,17,17,13,16,15,17,17,17,16,15,17,17,17,16,15,17,17,14,16,17,17,16,17,17,16,15,17,16,14,17,16,15,17,16,17,17,16,17,15,16,17,14,17,16,15,17,16,17,13,17,16,17,17,16,17,14,17,16,17,16,17,16,17,9];\n\n    return [ mul_table[i] || mul_table[mul_table.length - 1], shg_table[i] || shg_table[shg_table.length - 1] ];\n};\n\n// And, what we've all been waiting for:\nregisterEffect('blur', function(amt) {\n\n    if ( isNaN(amt) || amt < 1 ) return this;\n    // Round to nearest pixel\n    amt = Math.round(amt);\n\n    var iterations = 2,\t\t\t// increase for smoother blurring\n        width = this.base.width(),\n        height = this.base.height(),\n        widthMinus1 = width - 1,\n        heightMinus1 = height - 1,\n        radiusPlus1 = amt + 1,\n        div = 2 * amt + 1,\n        mul_sum = BlurStack.mul_shift_table(amt)[0],\n        shg_sum = BlurStack.mul_shift_table(amt)[1];\n\n    var it = iterations, // internal iterations in case doing multiple layers\n        imageData = this.context.getImageData();\n\n    if ( imageData ) {\n        var pixels = imageData.data;\n\n        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n            r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n            r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n            pr, pg, pb, pa;\n\n        var stackStart = new BlurStack(),\n            stack = stackStart,\n            stackEnd,\n            stackIn;\n\n        for ( i = 1; i < div; i++ ) {\n            stack = stack.next = new BlurStack();\n            if ( i === radiusPlus1 ) stackEnd = stack;\n        }\n\n        stack.next = stackStart;\n        stackIn = null;\n\n        // repeat for as many iterations as given\n        while ( it-- > 0 ) {\n\n            yw = yi = 0;\n\n            // loop through rows from top down\n            for ( y = height; --y > -1; ) {\n\n                // start summing pixel values\n                r_sum = radiusPlus1 * ( pr = pixels[yi] );\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1] );\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2] );\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3] );\n\n                stack = stackStart;\n\n                for ( i = radiusPlus1; --i > -1; ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n\n                    stack = stack.next;\n                }\n\n                for ( i = 1; i < radiusPlus1; i++ ) {\n\n                    p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\n                    r_sum += ( stack.r = pixels[p]);\n                    g_sum += ( stack.g = pixels[p + 1]);\n                    b_sum += ( stack.b = pixels[p + 2]);\n                    a_sum += ( stack.a = pixels[p + 3]);\n\n                    stack = stack.next;\n                }\n\n                stackIn = stackStart;\n\n                for ( x = 0; x < width; x++ ) {\n                    pixels[yi++] = (r_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (g_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (b_sum * mul_sum) >>> shg_sum;\n                    pixels[yi++] = (a_sum * mul_sum) >>> shg_sum;\n\n                    p = ( yw + ( ( p = x + amt + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n                }\n\n                // next row\n                yw += width;\n            }\n\n            for ( x = 0; x < width; x++ ) {\n\n                // with each column, divide yi by 4 (4 values per px)\n                yi = x << 2;\n\n                r_sum = radiusPlus1 * ( pr = pixels[yi]);\n                g_sum = radiusPlus1 * ( pg = pixels[yi + 1]);\n                b_sum = radiusPlus1 * ( pb = pixels[yi + 2]);\n                a_sum = radiusPlus1 * ( pa = pixels[yi + 3]);\n\n                stack = stackStart;\n\n                for ( i = 0; i < radiusPlus1; i++ ) {\n                    stack.r = pr;\n                    stack.g = pg;\n                    stack.b = pb;\n                    stack.a = pa;\n                    stack = stack.next;\n                }\n\n                yp = width;\n\n                for ( i = 1; i <= amt; i++ ) {\n                    yi = ( yp + x ) << 2;\n\n                    r_sum += ( stack.r = pixels[yi]);\n                    g_sum += ( stack.g = pixels[yi + 1]);\n                    b_sum += ( stack.b = pixels[yi + 2]);\n                    a_sum += ( stack.a = pixels[yi + 3]);\n\n                    stack = stack.next;\n\n                    if ( i < heightMinus1 ) yp += width;\n                }\n\n                yi = x;\n                stackIn = stackStart;\n\n                for ( y = 0; y < height; y++ ) {\n\n                    p = yi << 2;\n\n                    pixels[p + 3] = pa =(a_sum * mul_sum) >>> shg_sum;\n\n                    if ( pa > 0 ) {\n                        pa = 255 / pa;\n                        pixels[p]   = ((r_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 1] = ((g_sum * mul_sum) >>> shg_sum ) * pa;\n                        pixels[p + 2] = ((b_sum * mul_sum) >>> shg_sum ) * pa;\n                    } else {\n                        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n                    }\n\n                    p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\n                    r_sum -= stackIn.r - ( stackIn.r = pixels[p]);\n                    g_sum -= stackIn.g - ( stackIn.g = pixels[p + 1]);\n                    b_sum -= stackIn.b - ( stackIn.b = pixels[p + 2]);\n                    a_sum -= stackIn.a - ( stackIn.a = pixels[p + 3]);\n\n                    stackIn = stackIn.next;\n\n                    yi += width;\n                }\n            }\n        }\n\n        this.context.putImageData( imageData );\n    }\n});\n\nMartin.registerEffect('invert', function() {\n    this.context.loop(function(x, y, pixel) {\n        pixel.r = 255 - pixel.r;\n        pixel.g = 255 - pixel.g;\n        pixel.b = 255 - pixel.b;\n\n        return pixel;\n    });\n});\n\nvar events = ['click', 'mouseover', 'mousemove', 'mouseenter', 'mouseleave', 'mouseout', 'mousedown', 'mouseup'];\n\nfunction EventCallback(base, cb, type) {\n    return {\n        exec: function exec(e) {\n\n            var eventObj = {}, k;\n\n            for ( k in e ) {\n                eventObj[k] = e[k];\n            }\n\n            eventObj.x = e.offsetX ? e.offsetX : e.clientX - base.canvas.getBoundingClientRect().left;\n            eventObj.y = e.offsetY ? e.offsetY : e.clientY - base.canvas.getBoundingClientRect().top;\n\n            cb(eventObj);\n            base.autorender();\n        }\n    };\n}\n\nevents.forEach(function(evt){\n    Martin.prototype[evt] = function(cb) {\n\n        var callback = EventCallback(this, cb, evt);\n\n        this.canvas.addEventListener(evt, callback.exec);\n        return this;\n    };\n});\n\nMartin.prototype.on = function(evt, cb) {\n\n    evt = evt.split(' ');\n\n    evt.forEach(function(ev) {\n        var callback = EventCallback(this, cb, ev);\n        if ( events.indexOf(ev) > -1 ) {\n            this.canvas.addEventListener(ev, callback.exec);\n        }\n    }, this);\n\n    return this;\n};\n\n/*\n\tNeed to find a place for the rest of these important methods.\n\n\t.width()\n\t.height()\n*/\n\n// Set or change dimensions.\n[ 'width', 'height' ].forEach(function( which ) {\n\n\tMartin.prototype[which] = function( val, resize ) {\n\n\t\t// if no value given, return the corresponding value\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// Update height or width of all the layers' canvases\n\t\t// and update their contexts\n\t\tthis.canvas[which] = val;\n\t\tthis.layers.forEach(function(layer) {\n\t\t\tlayer[which](val, resize);\n\t\t});\n\n\t\treturn this;\n\n\t};\n\n\tMartin.Layer.prototype[which] = function(val, resize) {\n\n\t\tvar ratio;\n\n\t\tif ( !val ) return this.canvas[which];\n\n\t\t// normalize the value\n\t\tval = this['normalize' + (which === 'width' ? 'X' : 'Y')](val);\n\n\t\t// resize element canvases\n\t\tMartin.utils.forEach(this.elements, function(element) {\n\t\t\telement.canvas[which] = val;\n\t\t});\n\n\t\t// get the ratio, in case we're resizing\n\t\tratio = resize ? val / this.canvas[which] : 1;\n\n\t\tif ( resize ) {\n\n\t\t\tif ( which === 'width' ) this.scale.x *= ratio;\n\t\t\tif ( which === 'height' ) this.scale.y *= ratio;\n\n\t\t\tthis.canvas[which] = val;\n\t\t}\n\n\t\tthis.base.autorender();\n\n\t\treturn this;\n\t};\n});\n\nthis.Martin = Martin;\n\n})();\n"],"sourceRoot":"/source/"}